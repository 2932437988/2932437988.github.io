{
    "version": "https://jsonfeed.org/version/1",
    "title": "潇十七 • All posts by \"easy\" tag",
    "description": "可生活不是电影，我也少了点运气",
    "home_page_url": "https://x-17.top",
    "items": [
        {
            "id": "https://x-17.top/2022/12/29/LeetCode/2032-%E8%87%B3%E5%B0%91%E5%9C%A8%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E5%80%BC/",
            "url": "https://x-17.top/2022/12/29/LeetCode/2032-%E8%87%B3%E5%B0%91%E5%9C%A8%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E5%80%BC/",
            "title": "2032. 至少在两个数组中出现的值",
            "date_published": "2022-12-29T09:38:29.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"2032-至少在两个数组中出现的值\"><a class=\"markdownIt-Anchor\" href=\"#2032-至少在两个数组中出现的值\">#</a> <a href=\"https://leetcode.cn/problems/two-out-of-three/\">2032. 至少在两个数组中出现的值</a></h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">twoOutOfThree</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums1, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums2, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums3)</span> </span>&#123;</span><br><span class=\"line\">        map&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt; m;</span><br><span class=\"line\">        set&lt;<span class=\"type\">int</span>&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> num : nums1) &#123;</span><br><span class=\"line\">            m[num] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> num : nums2) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (m.<span class=\"built_in\">count</span>(num) &amp;&amp; m[num] == <span class=\"number\">1</span>) n.<span class=\"built_in\">insert</span>(num);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> m[num] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> num : nums3) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (m.<span class=\"built_in\">count</span>(num)) n.<span class=\"built_in\">insert</span>(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> vector&lt;<span class=\"type\">int</span>&gt; &#123;n.<span class=\"built_in\">begin</span>(), n.<span class=\"built_in\">end</span>()&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/27/LeetCode/2027-%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0/",
            "url": "https://x-17.top/2022/12/27/LeetCode/2027-%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0/",
            "title": "2027. 转换字符串的最少操作次数",
            "date_published": "2022-12-27T09:20:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minimumMoves</span><span class=\"params\">(string s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27;X&#x27;</span>) &#123;</span><br><span class=\"line\">                flag++;</span><br><span class=\"line\">                num++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (flag != <span class=\"number\">0</span>) num++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                num = <span class=\"number\">0</span>;</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num != <span class=\"number\">0</span>) ans++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/23/LeetCode/2011-%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E5%8F%98%E9%87%8F%E5%80%BC/",
            "url": "https://x-17.top/2022/12/23/LeetCode/2011-%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E5%8F%98%E9%87%8F%E5%80%BC/",
            "title": "2011. 执行操作后的变量值",
            "date_published": "2022-12-23T10:08:31.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"2011-执行操作后的变量值\"><a class=\"markdownIt-Anchor\" href=\"#2011-执行操作后的变量值\">#</a> <a href=\"https://leetcode.cn/problems/final-value-of-variable-after-performing-operations/description/\">2011. 执行操作后的变量值</a></h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">finalValueAfterOperations</span><span class=\"params\">(vector&lt;string&gt;&amp; operations)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> op : operations) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (op == <span class=\"string\">&quot;--X&quot;</span> || op == <span class=\"string\">&quot;X--&quot;</span>) ans--;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (op == <span class=\"string\">&quot;++X&quot;</span> || op == <span class=\"string\">&quot;X++&quot;</span>) ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/19/LeetCode/1971-%E5%AF%BB%E6%89%BE%E5%9B%BE%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E8%B7%AF%E5%BE%84/",
            "url": "https://x-17.top/2022/12/19/LeetCode/1971-%E5%AF%BB%E6%89%BE%E5%9B%BE%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E8%B7%AF%E5%BE%84/",
            "title": "1971. 寻找图中是否存在路径",
            "date_published": "2022-12-19T10:31:38.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1971-寻找图中是否存在路径\"><a class=\"markdownIt-Anchor\" href=\"#1971-寻找图中是否存在路径\">#</a> <a href=\"https://leetcode.cn/problems/find-if-path-exists-in-graph/description/\">1971. 寻找图中是否存在路径</a></h1>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> source, <span class=\"type\">int</span> destination, vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; &amp;adj, vector&lt;<span class=\"type\">bool</span>&gt; &amp;visited)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (source == destination) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        visited[source] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> next : adj[source]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!visited[next] &amp;&amp; <span class=\"built_in\">dfs</span>(next, destination, adj, visited)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">validPath</span><span class=\"params\">(<span class=\"type\">int</span> n, vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; edges, <span class=\"type\">int</span> source, <span class=\"type\">int</span> destination)</span> </span>&#123;</span><br><span class=\"line\">        vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">adj</span>(n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;edge : edges) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> x = edge[<span class=\"number\">0</span>], y = edge[<span class=\"number\">1</span>];</span><br><span class=\"line\">            adj[x].<span class=\"built_in\">emplace_back</span>(y);</span><br><span class=\"line\">            adj[y].<span class=\"built_in\">emplace_back</span>(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">visited</span><span class=\"params\">(n, <span class=\"literal\">false</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">dfs</span>(source, destination, adj, visited);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (m+n)$</li>\n<li>空间复杂度：$O (m+n)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/15/LeetCode/1945-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E5%90%8E%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/",
            "url": "https://x-17.top/2022/12/15/LeetCode/1945-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E5%90%8E%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/",
            "title": "1945. 字符串转化后的各位数字之和",
            "date_published": "2022-12-15T08:11:25.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1945-字符串转化后的各位数字之和\"><a class=\"markdownIt-Anchor\" href=\"#1945-字符串转化后的各位数字之和\">#</a> <a href=\"https://leetcode.cn/problems/sum-of-digits-of-string-after-convert/description/\">1945. 字符串转化后的各位数字之和</a></h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getLucky</span><span class=\"params\">(string s, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> str : s) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> t = str - <span class=\"string\">&#x27;a&#x27;</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (t) &#123;</span><br><span class=\"line\">                ans += t%<span class=\"number\">10</span>;</span><br><span class=\"line\">                t /= <span class=\"number\">10</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (k != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (ans) &#123;</span><br><span class=\"line\">                t += ans%<span class=\"number\">10</span>;</span><br><span class=\"line\">                ans /= <span class=\"number\">10</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans = t;</span><br><span class=\"line\">            k--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">⋅</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(C·n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/13/LeetCode/1832-%E5%88%A4%E6%96%AD%E5%8F%A5%E5%AD%90%E6%98%AF%E5%90%A6%E4%B8%BA%E5%85%A8%E5%AD%97%E6%AF%8D%E5%8F%A5/",
            "url": "https://x-17.top/2022/12/13/LeetCode/1832-%E5%88%A4%E6%96%AD%E5%8F%A5%E5%AD%90%E6%98%AF%E5%90%A6%E4%B8%BA%E5%85%A8%E5%AD%97%E6%AF%8D%E5%8F%A5/",
            "title": "1832. 判断句子是否为全字母句",
            "date_published": "2022-12-13T09:01:37.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1832-判断句子是否为全字母句\"><a class=\"markdownIt-Anchor\" href=\"#1832-判断句子是否为全字母句\">#</a> <a href=\"https://leetcode.cn/problems/check-if-the-sentence-is-pangram/description/\">1832. 判断句子是否为全字母句</a></h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">checkIfPangram</span><span class=\"params\">(string sentence)</span> </span>&#123;</span><br><span class=\"line\">        unordered_set&lt;<span class=\"type\">char</span>&gt; set;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> s : sentence) set.<span class=\"built_in\">insert</span>(s);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> set.<span class=\"built_in\">size</span>() == <span class=\"number\">26</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O©$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/11/LeetCode/1827-%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E7%BB%84%E9%80%92%E5%A2%9E/",
            "url": "https://x-17.top/2022/12/11/LeetCode/1827-%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E7%BB%84%E9%80%92%E5%A2%9E/",
            "title": "1827. 最少操作使数组递增",
            "date_published": "2022-12-11T10:10:26.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1827-最少操作使数组递增\"><a class=\"markdownIt-Anchor\" href=\"#1827-最少操作使数组递增\">#</a> <a href=\"https://leetcode.cn/problems/minimum-operations-to-make-the-array-increasing/description/\">1827. 最少操作使数组递增</a></h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minOperations</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            ans += <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, nums[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span> - nums[i]);</span><br><span class=\"line\">            nums[i] = <span class=\"built_in\">max</span>(nums[i], nums[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/08/LeetCode/1812-%E5%88%A4%E6%96%AD%E5%9B%BD%E9%99%85%E8%B1%A1%E6%A3%8B%E6%A3%8B%E7%9B%98%E4%B8%AD%E4%B8%80%E4%B8%AA%E6%A0%BC%E5%AD%90%E7%9A%84%E9%A2%9C%E8%89%B2/",
            "url": "https://x-17.top/2022/12/08/LeetCode/1812-%E5%88%A4%E6%96%AD%E5%9B%BD%E9%99%85%E8%B1%A1%E6%A3%8B%E6%A3%8B%E7%9B%98%E4%B8%AD%E4%B8%80%E4%B8%AA%E6%A0%BC%E5%AD%90%E7%9A%84%E9%A2%9C%E8%89%B2/",
            "title": "1812. 判断国际象棋棋盘中一个格子的颜色",
            "date_published": "2022-12-08T09:18:08.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1812-判断国际象棋棋盘中一个格子的颜色\"><a class=\"markdownIt-Anchor\" href=\"#1812-判断国际象棋棋盘中一个格子的颜色\">#</a> <a href=\"https://leetcode.cn/problems/determine-color-of-a-chessboard-square/description/\">1812. 判断国际象棋棋盘中一个格子的颜色</a></h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">squareIsWhite</span><span class=\"params\">(string c)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (c[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;a&#x27;</span> + c[<span class=\"number\">1</span>] - <span class=\"string\">&#x27;1&#x27;</span>) % <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (1)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/06/LeetCode/1805-%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE/",
            "url": "https://x-17.top/2022/12/06/LeetCode/1805-%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE/",
            "title": "1805. 字符串中不同整数的数目",
            "date_published": "2022-12-06T10:56:14.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1805-字符串中不同整数的数目\"><a class=\"markdownIt-Anchor\" href=\"#1805-字符串中不同整数的数目\">#</a> <a href=\"https://leetcode.cn/problems/number-of-different-integers-in-a-string/description/\">1805. 字符串中不同整数的数目</a></h1>\n<p>给你一个字符串 word ，该字符串由数字和小写英文字母组成。</p>\n<p>请你用空格替换每个不是数字的字符。例如，“a123bc34d8ef34” 将会变成 &quot;123  34 8  34&quot; 。注意，剩下的这些整数为（相邻彼此至少有一个空格隔开）：“123”、“34”、“8” 和 “34” 。</p>\n<p>返回对 word 完成替换后形成的 不同 整数的数目。</p>\n<p>只有当两个整数的 不含前导零 的十进制表示不同， 才认为这两个整数也不同。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word = &quot;a123bc34d8ef34&quot;</span><br><span class=\"line\">输出：3</span><br><span class=\"line\">解释：不同的整数有 &quot;123&quot;、&quot;34&quot; 和 &quot;8&quot; 。注意，&quot;34&quot; 只计数一次。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word = &quot;leet1234code234&quot;</span><br><span class=\"line\">输出：2</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word = &quot;a1b01c001&quot;</span><br><span class=\"line\">输出：1</span><br><span class=\"line\">解释：&quot;1&quot;、&quot;01&quot; 和 &quot;001&quot; 视为同一个整数的十进制表示，因为在比较十进制值时会忽略前导零的存在。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= word.length &lt;= 1000</li>\n<li>word 由数字和小写英文字母组成</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">numDifferentIntegers</span><span class=\"params\">(string word)</span> </span>&#123;</span><br><span class=\"line\">        string t = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        unordered_set&lt;string&gt; set;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; word.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (word[i] &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; word[i] &lt;= <span class=\"string\">&#x27;9&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (t == <span class=\"string\">&quot;&quot;</span> || t == <span class=\"string\">&quot;0&quot;</span>) t = word[i];</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    t += word[i];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (t != <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">                    set.<span class=\"built_in\">insert</span>(t);</span><br><span class=\"line\">                    t = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t != <span class=\"string\">&quot;&quot;</span>) set.<span class=\"built_in\">insert</span>(t);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> set.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (n)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/03/LeetCode/1796-%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%BA%8C%E5%A4%A7%E7%9A%84%E6%95%B0%E5%AD%97/",
            "url": "https://x-17.top/2022/12/03/LeetCode/1796-%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%BA%8C%E5%A4%A7%E7%9A%84%E6%95%B0%E5%AD%97/",
            "title": "1796. 字符串中第二大的数字",
            "date_published": "2022-12-03T07:12:25.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1796-字符串中第二大的数字\"><a class=\"markdownIt-Anchor\" href=\"#1796-字符串中第二大的数字\">#</a> <a href=\"https://leetcode.cn/problems/second-largest-digit-in-a-string/description/\">1796. 字符串中第二大的数字</a></h1>\n<p>给你一个混合字符串 s ，请你返回 s 中 第二大 的数字，如果不存在第二大的数字，请你返回 -1 。</p>\n<p>混合字符串 由小写英文字母和数字组成。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;dfa12321afd&quot;</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：出现在 s 中的数字包括 [1, 2, 3] 。第二大的数字是 2 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;abc1111&quot;</span><br><span class=\"line\">输出：-1</span><br><span class=\"line\">解释：出现在 s 中的数字只包含 [1] 。没有第二大的数字。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= s.length &lt;= 500</li>\n<li>s 只包含小写英文字母和（或）数字。</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">secondHighest</span><span class=\"params\">(string s)</span> </span>&#123;</span><br><span class=\"line\">        deque&lt;<span class=\"type\">int</span>&gt; ans;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[i] &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class=\"string\">&#x27;9&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ans.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">                    ans.<span class=\"built_in\">push_back</span>(s[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ans.<span class=\"built_in\">size</span>() == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (s[i] - <span class=\"string\">&#x27;0&#x27;</span> &gt; ans.<span class=\"built_in\">front</span>()) &#123;</span><br><span class=\"line\">                        ans.<span class=\"built_in\">push_front</span>(s[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s[i] - <span class=\"string\">&#x27;0&#x27;</span> &lt; ans.<span class=\"built_in\">front</span>()) &#123;</span><br><span class=\"line\">                        ans.<span class=\"built_in\">push_back</span>(s[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ans.<span class=\"built_in\">size</span>() == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (s[i] - <span class=\"string\">&#x27;0&#x27;</span> &lt; ans.<span class=\"built_in\">back</span>()) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s[i] - <span class=\"string\">&#x27;0&#x27;</span> &gt; ans.<span class=\"built_in\">front</span>()) &#123;</span><br><span class=\"line\">                        ans.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">                        ans.<span class=\"built_in\">push_front</span>(s[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s[i] - <span class=\"string\">&#x27;0&#x27;</span> &lt; ans.<span class=\"built_in\">front</span>() &amp;&amp; s[i] - <span class=\"string\">&#x27;0&#x27;</span> &gt; ans.<span class=\"built_in\">back</span>()) &#123;</span><br><span class=\"line\">                        ans.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">                        ans.<span class=\"built_in\">push_back</span>(s[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ans.<span class=\"built_in\">size</span>() == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> ans.<span class=\"built_in\">back</span>();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/12/01/LeetCode/1779-%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E6%9C%89%E7%9B%B8%E5%90%8C-X-%E6%88%96-Y-%E5%9D%90%E6%A0%87%E7%9A%84%E7%82%B9/",
            "url": "https://x-17.top/2022/12/01/LeetCode/1779-%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E6%9C%89%E7%9B%B8%E5%90%8C-X-%E6%88%96-Y-%E5%9D%90%E6%A0%87%E7%9A%84%E7%82%B9/",
            "title": "1779. 找到最近的有相同 X 或 Y 坐标的点",
            "date_published": "2022-12-01T11:13:37.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1779-找到最近的有相同-x-或-y-坐标的点\"><a class=\"markdownIt-Anchor\" href=\"#1779-找到最近的有相同-x-或-y-坐标的点\">#</a> <a href=\"https://leetcode.cn/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate/description/\">1779. 找到最近的有相同 X 或 Y 坐标的点</a></h1>\n<p>给你两个整数 x 和 y ，表示你在一个笛卡尔坐标系下的 (x, y) 处。同时，在同一个坐标系下给你一个数组 points ，其中 points [i] = [ai, bi] 表示在 (ai, bi) 处有一个点。当一个点与你所在的位置有相同的 x 坐标或者相同的 y 坐标时，我们称这个点是 有效的 。</p>\n<p>请返回距离你当前位置 曼哈顿距离 最近的 有效 点的下标（下标从 0 开始）。如果有多个最近的有效点，请返回下标 最小 的一个。如果没有有效点，请返回 -1 。</p>\n<p>两个点 (x1, y1) 和 (x2, y2) 之间的 曼哈顿距离 为 abs (x1 - x2) + abs (y1 - y2) 。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：x = 3, y = 4, points = [[1,2],[3,1],[2,4],[2,3],[4,4]]</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：所有点中，[3,1]，[2,4] 和 [4,4] 是有效点。有效点中，[2,4] 和 [4,4] 距离你当前位置的曼哈顿距离最小，都为 1 。[2,4] 的下标最小，所以返回 2 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：x = 3, y = 4, points = [[3,4]]</span><br><span class=\"line\">输出：0</span><br><span class=\"line\">提示：答案可以与你当前所在位置坐标相同。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：x = 3, y = 4, points = [[2,3]]</span><br><span class=\"line\">输出：-1</span><br><span class=\"line\">解释：没有 有效点。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= points.length &lt;= $10^4$</li>\n<li>points[i].length == 2</li>\n<li>1 &lt;= x, y, ai, bi &lt;= $10^4$</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">nearestValidPoint</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; points)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> mi = <span class=\"number\">10000</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; points.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (points[i][<span class=\"number\">0</span>] == x &amp;&amp; <span class=\"built_in\">abs</span>(points[i][<span class=\"number\">1</span>]-y) &lt; mi) &#123;</span><br><span class=\"line\">                mi = <span class=\"built_in\">abs</span>(points[i][<span class=\"number\">1</span>] - y);</span><br><span class=\"line\">                ans = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (points[i][<span class=\"number\">1</span>] == y &amp;&amp; <span class=\"built_in\">abs</span>(points[i][<span class=\"number\">0</span>]-x) &lt; mi) &#123;</span><br><span class=\"line\">                mi = <span class=\"built_in\">abs</span>(points[i][<span class=\"number\">0</span>] - x);</span><br><span class=\"line\">                ans = i; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/29/LeetCode/1758-%E7%94%9F%E6%88%90%E4%BA%A4%E6%9B%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0/",
            "url": "https://x-17.top/2022/11/29/LeetCode/1758-%E7%94%9F%E6%88%90%E4%BA%A4%E6%9B%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0/",
            "title": "1758. 生成交替二进制字符串的最少操作数",
            "date_published": "2022-11-29T09:49:05.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1758-生成交替二进制字符串的最少操作数\"><a class=\"markdownIt-Anchor\" href=\"#1758-生成交替二进制字符串的最少操作数\">#</a> <a href=\"https://leetcode.cn/problems/minimum-changes-to-make-alternating-binary-string/description/\">1758. 生成交替二进制字符串的最少操作数</a></h1>\n<p>给你一个仅由字符 ‘0’ 和 ‘1’ 组成的字符串 s 。一步操作中，你可以将任一 ‘0’ 变成 ‘1’ ，或者将 ‘1’ 变成 ‘0’ 。</p>\n<p>交替字符串 定义为：如果字符串中不存在相邻两个字符相等的情况，那么该字符串就是交替字符串。例如，字符串 “010” 是交替字符串，而字符串 “0100” 不是。</p>\n<p>返回使 s 变成 交替字符串 所需的 最少 操作数。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;0100&quot;</span><br><span class=\"line\">输出：1</span><br><span class=\"line\">解释：如果将最后一个字符变为 &#x27;1&#x27; ，s 就变成 &quot;0101&quot; ，即符合交替字符串定义。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;10&quot;</span><br><span class=\"line\">输出：0</span><br><span class=\"line\">解释：s 已经是交替字符串。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;1111&quot;</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：需要 2 步操作得到 &quot;0101&quot; 或 &quot;1010&quot; 。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= s.length &lt;= $10^4$</li>\n<li>s [i] 是 ‘0’ 或 ‘1’</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minOperations</span><span class=\"params\">(string s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; i%<span class=\"number\">2</span> == <span class=\"number\">0</span>) ans++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27;1&#x27;</span> &amp;&amp; i%<span class=\"number\">2</span> == <span class=\"number\">1</span>) ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">min</span>(ans, (<span class=\"type\">int</span>)s.<span class=\"built_in\">length</span>() - ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/27/LeetCode/1752-%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%BB%8F%E6%8E%92%E5%BA%8F%E5%92%8C%E8%BD%AE%E8%BD%AC%E5%BE%97%E5%88%B0/",
            "url": "https://x-17.top/2022/11/27/LeetCode/1752-%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%BB%8F%E6%8E%92%E5%BA%8F%E5%92%8C%E8%BD%AE%E8%BD%AC%E5%BE%97%E5%88%B0/",
            "title": "1752. 检查数组是否经排序和轮转得到",
            "date_published": "2022-11-27T07:53:37.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1752-检查数组是否经排序和轮转得到\"><a class=\"markdownIt-Anchor\" href=\"#1752-检查数组是否经排序和轮转得到\">#</a> <a href=\"https://leetcode.cn/problems/check-if-array-is-sorted-and-rotated/description/\">1752. 检查数组是否经排序和轮转得到</a></h1>\n<p>给你一个数组 nums 。nums 的源数组中，所有元素与 nums 相同，但按非递减顺序排列。</p>\n<p>如果 nums 能够由源数组轮转若干位置（包括 0 个位置）得到，则返回 true ；否则，返回 false 。</p>\n<p>源数组中可能存在 重复项 。</p>\n<p>注意：我们称数组 A 在轮转 x 个位置后得到长度相同的数组 B ，当它们满足 A [i] == B [(i+x) % A.length] ，其中 % 为取余运算。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [3,4,5,1,2]</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：[1,2,3,4,5] 为有序的源数组。</span><br><span class=\"line\">可以轮转 x = 3 个位置，使新数组从值为 3 的元素开始：[3,4,5,1,2] 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [2,1,3,4]</span><br><span class=\"line\">输出：false</span><br><span class=\"line\">解释：源数组无法经轮转得到 nums 。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,2,3]</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：[1,2,3] 为有序的源数组。</span><br><span class=\"line\">可以轮转 x = 0 个位置（即不轮转）得到 nums 。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= nums.length &lt;= 100</li>\n<li>1 &lt;= nums[i] &lt;= 100</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] &lt; nums[i<span class=\"number\">-1</span>] &amp;&amp; flag) &#123;</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[i] &lt; nums[i<span class=\"number\">-1</span>] &amp;&amp; !flag) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[<span class=\"number\">0</span>] &gt;= nums[nums.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>])</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/23/LeetCode/1742-%E7%9B%92%E5%AD%90%E4%B8%AD%E5%B0%8F%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F/",
            "url": "https://x-17.top/2022/11/23/LeetCode/1742-%E7%9B%92%E5%AD%90%E4%B8%AD%E5%B0%8F%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F/",
            "title": "1742. 盒子中小球的最大数量",
            "date_published": "2022-11-23T08:03:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1742-盒子中小球的最大数量\"><a class=\"markdownIt-Anchor\" href=\"#1742-盒子中小球的最大数量\">#</a> <a href=\"https://leetcode.cn/problems/maximum-number-of-balls-in-a-box/description/\">1742. 盒子中小球的最大数量</a></h1>\n<p>你在一家生产小球的玩具厂工作，有 n 个小球，编号从 lowLimit 开始，到 highLimit 结束（包括 lowLimit 和 highLimit ，即 n == highLimit - lowLimit + 1）。另有无限数量的盒子，编号从 1 到 infinity 。</p>\n<p>你的工作是将每个小球放入盒子中，其中盒子的编号应当等于小球编号上每位数字的和。例如，编号 321 的小球应当放入编号 3 + 2 + 1 = 6 的盒子，而编号 10 的小球应当放入编号 1 + 0 = 1 的盒子。</p>\n<p>给你两个整数 lowLimit 和 highLimit ，返回放有最多小球的盒子中的小球数量。如果有多个盒子都满足放有最多小球，只需返回其中任一盒子的小球数量。</p>\n<p>示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：lowLimit = 1, highLimit = 10</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：</span><br><span class=\"line\">盒子编号：1 2 3 4 5 6 7 8 9 10 11 ...</span><br><span class=\"line\">小球数量：2 1 1 1 1 1 1 1 1 0  0  ...</span><br><span class=\"line\">编号 1 的盒子放有最多小球，小球数量为 2 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：lowLimit = 5, highLimit = 15</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：</span><br><span class=\"line\">盒子编号：1 2 3 4 5 6 7 8 9 10 11 ...</span><br><span class=\"line\">小球数量：1 1 1 1 2 2 1 1 1 0  0  ...</span><br><span class=\"line\">编号 5 和 6 的盒子放有最多小球，每个盒子中的小球数量都是 2 。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：lowLimit = 19, highLimit = 28</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：</span><br><span class=\"line\">盒子编号：1 2 3 4 5 6 7 8 9 10 11 12 ...</span><br><span class=\"line\">小球数量：0 1 1 1 1 1 1 1 1 2  0  0  ...</span><br><span class=\"line\">编号 10 的盒子放有最多小球，小球数量为 2 。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= lowLimit &lt;= highLimit &lt;= $10^5$</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countBalls</span><span class=\"params\">(<span class=\"type\">int</span> lowLimit, <span class=\"type\">int</span> highLimit)</span> </span>&#123;</span><br><span class=\"line\">        unordered_map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; count;</span><br><span class=\"line\">        <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = lowLimit; i &lt;= highLimit; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> box = <span class=\"number\">0</span>, x = i;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (x) &#123;</span><br><span class=\"line\">                box += x % <span class=\"number\">10</span>;</span><br><span class=\"line\">                x /= <span class=\"number\">10</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            count[box]++;</span><br><span class=\"line\">            res = <span class=\"built_in\">max</span>(res, count[box]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (nloghighLimit)$</li>\n<li>空间复杂度：$O (loghighLimit)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/19/LeetCode/1732-%E6%89%BE%E5%88%B0%E6%9C%80%E9%AB%98%E6%B5%B7%E6%8B%94/",
            "url": "https://x-17.top/2022/11/19/LeetCode/1732-%E6%89%BE%E5%88%B0%E6%9C%80%E9%AB%98%E6%B5%B7%E6%8B%94/",
            "title": "1732. 找到最高海拔",
            "date_published": "2022-11-19T10:30:40.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1732-找到最高海拔\"><a class=\"markdownIt-Anchor\" href=\"#1732-找到最高海拔\">#</a> <a href=\"https://leetcode.cn/problems/find-the-highest-altitude/description/\">1732. 找到最高海拔</a></h1>\n<p>有一个自行车手打算进行一场公路骑行，这条路线总共由 n + 1 个不同海拔的点组成。自行车手从海拔为 0 的点 0 开始骑行。</p>\n<p>给你一个长度为 n 的整数数组 gain ，其中 gain [i] 是点 i 和点 i + 1 的 净海拔高度差（0 &lt;= i &lt; n）。请你返回 最高点的海拔 。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：gain = [-5,1,5,0,-7]</span><br><span class=\"line\">输出：1</span><br><span class=\"line\">解释：海拔高度依次为 [0,-5,-4,1,1,-6] 。最高海拔为 1 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：gain = [-4,-3,-2,-1,4,3,2]</span><br><span class=\"line\">输出：0</span><br><span class=\"line\">解释：海拔高度依次为 [0,-4,-7,-9,-10,-6,-3,-1] 。最高海拔为 0 。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>n == gain.length</li>\n<li>1 &lt;= n &lt;= 100</li>\n<li>-100 &lt;= gain[i] &lt;= 100</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">largestAltitude</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; gain)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> g : gain) &#123;</span><br><span class=\"line\">            t += g;</span><br><span class=\"line\">            ans = <span class=\"built_in\">max</span>(t, ans);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/15/LeetCode/1710-%E5%8D%A1%E8%BD%A6%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8D%95%E5%85%83%E6%95%B0/",
            "url": "https://x-17.top/2022/11/15/LeetCode/1710-%E5%8D%A1%E8%BD%A6%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8D%95%E5%85%83%E6%95%B0/",
            "title": "1710. 卡车上的最大单元数",
            "date_published": "2022-11-15T04:34:44.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1710-卡车上的最大单元数\"><a class=\"markdownIt-Anchor\" href=\"#1710-卡车上的最大单元数\">#</a> <a href=\"https://leetcode.cn/problems/maximum-units-on-a-truck/description/\">1710. 卡车上的最大单元数</a></h1>\n<p>请你将一些箱子装在 一辆卡车 上。给你一个二维数组 boxTypes ，其中 boxTypes [i] = [numberOfBoxesi, numberOfUnitsPerBoxi] ：</p>\n<ul>\n<li>numberOfBoxesi 是类型 i 的箱子的数量。</li>\n<li>numberOfUnitsPerBoxi 是类型 i 每个箱子可以装载的单元数量。</li>\n</ul>\n<p>整数 truckSize 表示卡车上可以装载 箱子 的 最大数量 。只要箱子数量不超过 truckSize ，你就可以选择任意箱子装到卡车上。</p>\n<p>返回卡车可以装载 单元 的 最大 总数。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4</span><br><span class=\"line\">输出：8</span><br><span class=\"line\">解释：箱子的情况如下：</span><br><span class=\"line\"><span class=\"bullet\">-</span> 1 个第一类的箱子，里面含 3 个单元。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 2 个第二类的箱子，每个里面含 2 个单元。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 3 个第三类的箱子，每个里面含 1 个单元。</span><br><span class=\"line\">可以选择第一类和第二类的所有箱子，以及第三类的一个箱子。</span><br><span class=\"line\">单元总数 = (1 <span class=\"emphasis\">* 3) + (2 *</span> 2) + (1 <span class=\"emphasis\">* 1) = 8</span></span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：boxTypes = [[5,10],[2,5],[4,7],[3,9]], truckSize = 10</span><br><span class=\"line\">输出：91</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= boxTypes.length &lt;= 1000</li>\n<li>1 &lt;= numberOfBoxesi, numberOfUnitsPerBoxi &lt;= 1000</li>\n<li>1 &lt;= truckSize &lt;= $10^6$</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">maximumUnits</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; boxTypes, <span class=\"type\">int</span> truckSize)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(boxTypes.<span class=\"built_in\">begin</span>(), boxTypes.<span class=\"built_in\">end</span>(), [](<span class=\"type\">const</span> vector&lt;<span class=\"type\">int</span>&gt;&amp; a, <span class=\"type\">const</span> vector&lt;<span class=\"type\">int</span>&gt;&amp; b)&#123;<span class=\"keyword\">return</span> a[<span class=\"number\">1</span>] &gt; b[<span class=\"number\">1</span>];&#125;);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> box : boxTypes) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (truckSize) &#123;</span><br><span class=\"line\">                ans += <span class=\"built_in\">min</span>(box[<span class=\"number\">0</span>], truckSize) * box[<span class=\"number\">1</span>];</span><br><span class=\"line\">                truckSize = <span class=\"built_in\">max</span>(truckSize - box[<span class=\"number\">0</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (nlog (n))$</li>\n<li>空间复杂度：$O (nlog (n))$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/11/LeetCode/1704-%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%A4%E5%8D%8A%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BC%BC/",
            "url": "https://x-17.top/2022/11/11/LeetCode/1704-%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%A4%E5%8D%8A%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BC%BC/",
            "title": "1704. 判断字符串的两半是否相似",
            "date_published": "2022-11-11T04:12:18.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1704-判断字符串的两半是否相似\"><a class=\"markdownIt-Anchor\" href=\"#1704-判断字符串的两半是否相似\">#</a> <a href=\"https://leetcode.cn/problems/determine-if-string-halves-are-alike/description/\">1704. 判断字符串的两半是否相似</a></h1>\n<p>给你一个偶数长度的字符串 s 。将其拆分成长度相同的两半，前一半为 a ，后一半为 b 。</p>\n<p>两个字符串 相似 的前提是它们都含有相同数目的元音（‘a’，‘e’，‘i’，‘o’，‘u’，‘A’，‘E’，‘I’，‘O’，‘U’）。注意，s 可能同时含有大写和小写字母。</p>\n<p>如果 a 和 b 相似，返回 true ；否则，返回 false 。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;book&quot;</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：a = &quot;bo&quot; 且 b = &quot;ok&quot; 。a 中有 1 个元音，b 也有 1 个元音。所以，a 和 b 相似。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;textbook&quot;</span><br><span class=\"line\">输出：false</span><br><span class=\"line\">解释：a = &quot;text&quot; 且 b = &quot;book&quot; 。a 中有 1 个元音，b 中有 2 个元音。因此，a 和 b 不相似。</span><br><span class=\"line\">注意，元音 o 在 b 中出现两次，记为 2 个。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>2 &lt;= s.length &lt;= 1000</li>\n<li>s.length 是偶数</li>\n<li>s 由 大写和小写 字母组成</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">halvesAreAlike</span><span class=\"params\">(string s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">length</span>() / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27;a&#x27;</span> || s[i] == <span class=\"string\">&#x27;A&#x27;</span> || s[i] == <span class=\"string\">&#x27;e&#x27;</span> || s[i] == <span class=\"string\">&#x27;E&#x27;</span> || s[i] == <span class=\"string\">&#x27;i&#x27;</span> || s[i] == <span class=\"string\">&#x27;I&#x27;</span> || s[i] == <span class=\"string\">&#x27;o&#x27;</span> || s[i] == <span class=\"string\">&#x27;O&#x27;</span> || s[i] == <span class=\"string\">&#x27;u&#x27;</span> || s[i] == <span class=\"string\">&#x27;U&#x27;</span>) a++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = s.<span class=\"built_in\">length</span>() / <span class=\"number\">2</span>; i &lt; s.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27;a&#x27;</span> || s[i] == <span class=\"string\">&#x27;A&#x27;</span> || s[i] == <span class=\"string\">&#x27;e&#x27;</span> || s[i] == <span class=\"string\">&#x27;E&#x27;</span> || s[i] == <span class=\"string\">&#x27;i&#x27;</span> || s[i] == <span class=\"string\">&#x27;I&#x27;</span> || s[i] == <span class=\"string\">&#x27;o&#x27;</span> || s[i] == <span class=\"string\">&#x27;O&#x27;</span> || s[i] == <span class=\"string\">&#x27;u&#x27;</span> || s[i] == <span class=\"string\">&#x27;U&#x27;</span>) b++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"type\">bool</span>)(a == b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/08/LeetCode/1684-%E7%BB%9F%E8%AE%A1%E4%B8%80%E8%87%B4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE/",
            "url": "https://x-17.top/2022/11/08/LeetCode/1684-%E7%BB%9F%E8%AE%A1%E4%B8%80%E8%87%B4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE/",
            "title": "1684. 统计一致字符串的数目",
            "date_published": "2022-11-08T04:10:53.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1684-统计一致字符串的数目\"><a class=\"markdownIt-Anchor\" href=\"#1684-统计一致字符串的数目\">#</a> <a href=\"https://leetcode.cn/problems/count-the-number-of-consistent-strings/description/\">1684. 统计一致字符串的数目</a></h1>\n<p>给你一个由不同字符组成的字符串 allowed 和一个字符串数组 words 。如果一个字符串的每一个字符都在 allowed 中，就称这个字符串是 一致字符串 。</p>\n<p>请你返回 words 数组中 一致字符串 的数目。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：allowed = &quot;ab&quot;, words = [&quot;ad&quot;,&quot;bd&quot;,&quot;aaab&quot;,&quot;baa&quot;,&quot;badab&quot;]</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：字符串 &quot;aaab&quot; 和 &quot;baa&quot; 都是一致字符串，因为它们只包含字符 &#x27;a&#x27; 和 &#x27;b&#x27; 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：allowed = &quot;abc&quot;, words = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;ab&quot;,&quot;ac&quot;,&quot;bc&quot;,&quot;abc&quot;]</span><br><span class=\"line\">输出：7</span><br><span class=\"line\">解释：所有字符串都是一致的。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：allowed = &quot;cad&quot;, words = [&quot;cc&quot;,&quot;acd&quot;,&quot;b&quot;,&quot;ba&quot;,&quot;bac&quot;,&quot;bad&quot;,&quot;ac&quot;,&quot;d&quot;]</span><br><span class=\"line\">输出：4</span><br><span class=\"line\">解释：字符串 &quot;cc&quot;，&quot;acd&quot;，&quot;ac&quot; 和 &quot;d&quot; 是一致字符串。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= words.length &lt;= $10^4$</li>\n<li>1 &lt;= allowed.length &lt;= 26</li>\n<li>1 &lt;= words[i].length &lt;= 10</li>\n<li>allowed 中的字符 互不相同 。</li>\n<li>words [i] 和 allowed 只包含小写英文字母。</li>\n</ul>\n<h1 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countConsistentStrings</span><span class=\"params\">(string allowed, vector&lt;string&gt;&amp; words)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> s : allowed) &#123;</span><br><span class=\"line\">            a |= <span class=\"number\">1</span> &lt;&lt; (s - <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; words.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> b = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> str : words[i]) b |= <span class=\"number\">1</span> &lt;&lt; (str - <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((a | b) == a) ans++;</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n+\\sum m_i)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/06/LeetCode/1678-%E8%AE%BE%E8%AE%A1-Goal-%E8%A7%A3%E6%9E%90%E5%99%A8/",
            "url": "https://x-17.top/2022/11/06/LeetCode/1678-%E8%AE%BE%E8%AE%A1-Goal-%E8%A7%A3%E6%9E%90%E5%99%A8/",
            "title": "1678. 设计 Goal 解析器",
            "date_published": "2022-11-06T02:11:32.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1678-设计-goal-解析器\"><a class=\"markdownIt-Anchor\" href=\"#1678-设计-goal-解析器\">#</a> <a href=\"https://leetcode.cn/problems/goal-parser-interpretation/description/\">1678. 设计 Goal 解析器</a></h1>\n<p>请你设计一个可以解释字符串 command 的 Goal 解析器 。command 由 “G”、&quot;()&quot; 和 / 或 “(al)” 按某种顺序组成。Goal 解析器会将 “G” 解释为字符串 “G”、&quot;()&quot; 解释为字符串 “o” ，&quot;(al)&quot; 解释为字符串 “al” 。然后，按原顺序将经解释得到的字符串连接成一个字符串。</p>\n<p>给你字符串 command ，返回 Goal 解析器 对 command 的解释结果。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：command = &quot;G()(al)&quot;</span><br><span class=\"line\">输出：&quot;Goal&quot;</span><br><span class=\"line\">解释：Goal 解析器解释命令的步骤如下所示：</span><br><span class=\"line\">G -&gt; G</span><br><span class=\"line\">() -&gt; o</span><br><span class=\"line\">(al) -&gt; al</span><br><span class=\"line\">最后连接得到的结果是 &quot;Goal&quot;</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：command = &quot;G()()()()(al)&quot;</span><br><span class=\"line\">输出：&quot;Gooooal&quot;</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：command = &quot;(al)G(al)()()G&quot;</span><br><span class=\"line\">输出：&quot;alGalooG&quot;</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= command.length &lt;= 100</li>\n<li>command 由 “G”、&quot;()&quot; 和 / 或 “(al)” 按某种顺序组成</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">string <span class=\"title\">interpret</span><span class=\"params\">(string command)</span> </span>&#123;</span><br><span class=\"line\">        string ans = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; command.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (command[i] == <span class=\"string\">&#x27;G&#x27;</span>) ans += command[i];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (command[i] == <span class=\"string\">&#x27;(&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (command[i + <span class=\"number\">1</span>] == <span class=\"string\">&#x27;)&#x27;</span>) ans += <span class=\"string\">&quot;o&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> ans += <span class=\"string\">&quot;al&quot;</span>; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/03/LeetCode/1668-%E6%9C%80%E5%A4%A7%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "url": "https://x-17.top/2022/11/03/LeetCode/1668-%E6%9C%80%E5%A4%A7%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "title": "1668. 最大重复子字符串",
            "date_published": "2022-11-03T04:21:48.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1668-最大重复子字符串\"><a class=\"markdownIt-Anchor\" href=\"#1668-最大重复子字符串\">#</a> <a href=\"https://leetcode.cn/problems/maximum-repeating-substring/description/\">1668. 最大重复子字符串</a></h1>\n<p>给你一个字符串 sequence ，如果字符串 word 连续重复 k 次形成的字符串是 sequence 的一个子字符串，那么单词 word 的 重复值为 k 。单词 word 的 最大重复值 是单词 word 在 sequence 中最大的重复值。如果 word 不是 sequence 的子串，那么重复值 k 为 0 。</p>\n<p>给你一个字符串 sequence 和 word ，请你返回 最大重复值 k 。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：sequence = &quot;ababc&quot;, word = &quot;ab&quot;</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：&quot;abab&quot; 是 &quot;ababc&quot; 的子字符串。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：sequence = &quot;ababc&quot;, word = &quot;ba&quot;</span><br><span class=\"line\">输出：1</span><br><span class=\"line\">解释：&quot;ba&quot; 是 &quot;ababc&quot; 的子字符串，但 &quot;baba&quot; 不是 &quot;ababc&quot; 的子字符串。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：sequence = &quot;ababc&quot;, word = &quot;ac&quot;</span><br><span class=\"line\">输出：0</span><br><span class=\"line\">解释：&quot;ac&quot; 不是 &quot;ababc&quot; 的子字符串。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= sequence.length &lt;= 100</li>\n<li>1 &lt;= word.length &lt;= 100</li>\n<li>sequence 和 word 都只包含小写英文字母。</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">maxRepeating</span><span class=\"params\">(string sequence, string word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n = sequence.<span class=\"built_in\">size</span>(), m = word.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt; m) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">fail</span><span class=\"params\">(m, <span class=\"number\">-1</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; m; ++i) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> j = fail[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (j != <span class=\"number\">-1</span> &amp;&amp; word[j + <span class=\"number\">1</span>] != word[i]) &#123;</span><br><span class=\"line\">                j = fail[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (word[j + <span class=\"number\">1</span>] == word[i]) &#123;</span><br><span class=\"line\">                fail[i] = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">f</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> j = <span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (j != <span class=\"number\">-1</span> &amp;&amp; word[j + <span class=\"number\">1</span>] != sequence[i]) &#123;</span><br><span class=\"line\">                j = fail[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (word[j + <span class=\"number\">1</span>] == sequence[i]) &#123;</span><br><span class=\"line\">                ++j;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j == m - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    f[i] = (i &gt;= m ? f[i - m] : <span class=\"number\">0</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    j = fail[j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"built_in\">max_element</span>(f.<span class=\"built_in\">begin</span>(), f.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (m+n)$</li>\n<li>空间复杂度：$O (m+n)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/11/01/LeetCode/1662-%E6%A3%80%E6%9F%A5%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/",
            "url": "https://x-17.top/2022/11/01/LeetCode/1662-%E6%A3%80%E6%9F%A5%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/",
            "title": "1662. 检查两个字符串数组是否相等",
            "date_published": "2022-11-01T01:21:09.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1662-检查两个字符串数组是否相等\"><a class=\"markdownIt-Anchor\" href=\"#1662-检查两个字符串数组是否相等\">#</a> <a href=\"https://leetcode.cn/problems/check-if-two-string-arrays-are-equivalent/\">1662. 检查两个字符串数组是否相等</a></h1>\n<p>给你两个字符串数组 word1 和 word2 。如果两个数组表示的字符串相同，返回 true ；否则，返回 false 。</p>\n<p>数组表示的字符串 是由数组中的所有元素 按顺序 连接形成的字符串。</p>\n<p></p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word1 = [&quot;ab&quot;, &quot;c&quot;], word2 = [&quot;a&quot;, &quot;bc&quot;]</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：</span><br><span class=\"line\">word1 表示的字符串为 &quot;ab&quot; + &quot;c&quot; -&gt; &quot;abc&quot;</span><br><span class=\"line\">word2 表示的字符串为 &quot;a&quot; + &quot;bc&quot; -&gt; &quot;abc&quot;</span><br><span class=\"line\">两个字符串相同，返回 true</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word1 = [&quot;a&quot;, &quot;cb&quot;], word2 = [&quot;ab&quot;, &quot;c&quot;]</span><br><span class=\"line\">输出：false</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word1  = [&quot;abc&quot;, &quot;d&quot;, &quot;defg&quot;], word2 = [&quot;abcddefg&quot;]</span><br><span class=\"line\">输出：true</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>$1 &lt;= word1.length, word2.length &lt;= 10^3$</li>\n<li>$1 &lt;= word1[i].length, word2[i].length &lt;= 10^3$</li>\n<li>$1 &lt;= sum(word1[i].length), sum(word2[i].length) &lt;= 10^3$</li>\n<li>word1 [i] 和 word2 [i] 由小写字母组成</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">arrayStringsAreEqual</span><span class=\"params\">(vector&lt;string&gt;&amp; word1, vector&lt;string&gt;&amp; word2)</span> </span>&#123;</span><br><span class=\"line\">        string ans = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; word1.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; word1[i].<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">                ans += word1[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> n = ans.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; word2.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; word2[i].<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (num &lt; n &amp;&amp; word2[i][j] == ans[num]) num++;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num == n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (n)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/29/LeetCode/1773-%E7%BB%9F%E8%AE%A1%E5%8C%B9%E9%85%8D%E6%A3%80%E7%B4%A2%E8%A7%84%E5%88%99%E7%9A%84%E7%89%A9%E5%93%81%E6%95%B0%E9%87%8F/",
            "url": "https://x-17.top/2022/10/29/LeetCode/1773-%E7%BB%9F%E8%AE%A1%E5%8C%B9%E9%85%8D%E6%A3%80%E7%B4%A2%E8%A7%84%E5%88%99%E7%9A%84%E7%89%A9%E5%93%81%E6%95%B0%E9%87%8F/",
            "title": "1773. 统计匹配检索规则的物品数量",
            "date_published": "2022-10-29T04:15:28.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1773-统计匹配检索规则的物品数量\"><a class=\"markdownIt-Anchor\" href=\"#1773-统计匹配检索规则的物品数量\">#</a> <a href=\"https://leetcode.cn/problems/count-items-matching-a-rule/\">1773. 统计匹配检索规则的物品数量</a></h1>\n<p>给你一个数组 items ，其中 items [i] = [typei, colori, namei] ，描述第 i 件物品的类型、颜色以及名称。</p>\n<p>另给你一条由两个字符串 ruleKey 和 ruleValue 表示的检索规则。</p>\n<p>如果第 i 件物品能满足下述条件之一，则认为该物品与给定的检索规则 匹配 ：</p>\n<ul>\n<li>ruleKey == “type” 且 ruleValue == $type_i$ 。</li>\n<li>ruleKey == “color” 且 ruleValue == $color_i$ 。</li>\n<li>ruleKey == “name” 且 ruleValue == $name_i$ 。<br>\n统计并返回 匹配检索规则的物品数量 。</li>\n</ul>\n<p></p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：items = [[&quot;phone&quot;,&quot;blue&quot;,&quot;pixel&quot;],[&quot;computer&quot;,&quot;silver&quot;,&quot;lenovo&quot;],[&quot;phone&quot;,&quot;gold&quot;,&quot;iphone&quot;]], ruleKey = &quot;color&quot;, ruleValue = &quot;silver&quot;</span><br><span class=\"line\">输出：1</span><br><span class=\"line\">解释：只有一件物品匹配检索规则，这件物品是 [&quot;computer&quot;,&quot;silver&quot;,&quot;lenovo&quot;] 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：items = [[&quot;phone&quot;,&quot;blue&quot;,&quot;pixel&quot;],[&quot;computer&quot;,&quot;silver&quot;,&quot;phone&quot;],[&quot;phone&quot;,&quot;gold&quot;,&quot;iphone&quot;]], ruleKey = &quot;type&quot;, ruleValue = &quot;phone&quot;</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：只有两件物品匹配检索规则，这两件物品分别是 [&quot;phone&quot;,&quot;blue&quot;,&quot;pixel&quot;] 和 [&quot;phone&quot;,&quot;gold&quot;,&quot;iphone&quot;] 。注意，[&quot;computer&quot;,&quot;silver&quot;,&quot;phone&quot;] 未匹配检索规则。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>$1 &lt;= items.length &lt;= 10^4$</li>\n<li>$1 &lt;= type_i.length, color_i.length, name_i.length, ruleValue.length &lt;= 10$</li>\n<li>ruleKey 等于 “type”、“color” 或 “name”</li>\n<li>所有字符串仅由小写字母组成</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countMatches</span><span class=\"params\">(vector&lt;vector&lt;string&gt;&gt;&amp; items, string ruleKey, string ruleValue)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> flag;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ruleKey==<span class=\"string\">&quot;type&quot;</span>)</span><br><span class=\"line\">            flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ruleKey==<span class=\"string\">&quot;color&quot;</span>)</span><br><span class=\"line\">            flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            flag=<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;items.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(items[i][flag]==ruleValue)</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/27/LeetCode/1822-%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%A7%AF%E7%9A%84%E7%AC%A6%E5%8F%B7/",
            "url": "https://x-17.top/2022/10/27/LeetCode/1822-%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%A7%AF%E7%9A%84%E7%AC%A6%E5%8F%B7/",
            "title": "1822. 数组元素积的符号",
            "date_published": "2022-10-27T08:02:11.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1822-数组元素积的符号\"><a class=\"markdownIt-Anchor\" href=\"#1822-数组元素积的符号\">#</a> <a href=\"https://leetcode.cn/problems/sign-of-the-product-of-an-array/\">1822. 数组元素积的符号</a></h1>\n<p>已知函数 signFunc (x) 将会根据 x 的正负返回特定值：</p>\n<p>如果 x 是正数，返回 1 。<br>\n如果 x 是负数，返回 -1 。<br>\n如果 x 是等于 0 ，返回 0 。<br>\n给你一个整数数组 nums 。令 product 为数组 nums 中所有元素值的乘积。</p>\n<p>返回 signFunc (product) 。</p>\n<p></p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [-1,-2,-3,-4,3,2,1]</span><br><span class=\"line\">输出：1</span><br><span class=\"line\">解释：数组中所有值的乘积是 144 ，且 signFunc(144) = 1</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,5,0,2,-3]</span><br><span class=\"line\">输出：0</span><br><span class=\"line\">解释：数组中所有值的乘积是 0 ，且 signFunc(0) = 0</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [-1,1,-1,1,-1]</span><br><span class=\"line\">输出：-1</span><br><span class=\"line\">解释：数组中所有值的乘积是 -1 ，且 signFunc(-1) = -1</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= nums.length &lt;= 1000</li>\n<li>-100 &lt;= nums[i] &lt;= 100</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">iszero</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n&gt;<span class=\"number\">0</span>?<span class=\"number\">1</span>:n==<span class=\"number\">0</span>?<span class=\"number\">0</span>:<span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">arraySign</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> num:nums)&#123;</span><br><span class=\"line\">            ans*=<span class=\"built_in\">iszero</span>(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/23/LeetCode/1768-%E4%BA%A4%E6%9B%BF%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "url": "https://x-17.top/2022/10/23/LeetCode/1768-%E4%BA%A4%E6%9B%BF%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "title": "1768. 交替合并字符串",
            "date_published": "2022-10-23T04:29:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1768-交替合并字符串\"><a class=\"markdownIt-Anchor\" href=\"#1768-交替合并字符串\">#</a> <a href=\"https://leetcode.cn/problems/merge-strings-alternately/\">1768. 交替合并字符串</a></h1>\n<p>给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。</p>\n<p>返回 合并后的字符串 。</p>\n<p></p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word1 = &quot;abc&quot;, word2 = &quot;pqr&quot;</span><br><span class=\"line\">输出：&quot;apbqcr&quot;</span><br><span class=\"line\">解释：字符串合并情况如下所示：</span><br><span class=\"line\">word1：  a   b   c</span><br><span class=\"line\">word2：    p   q   r</span><br><span class=\"line\">合并后：  a p b q c r</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word1 = &quot;ab&quot;, word2 = &quot;pqrs&quot;</span><br><span class=\"line\">输出：&quot;apbqrs&quot;</span><br><span class=\"line\">解释：注意，word2 比 word1 长，&quot;rs&quot; 需要追加到合并后字符串的末尾。</span><br><span class=\"line\">word1：  a   b </span><br><span class=\"line\">word2：    p   q   r   s</span><br><span class=\"line\">合并后：  a p b q   r   s</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：word1 = &quot;abcd&quot;, word2 = &quot;pq&quot;</span><br><span class=\"line\">输出：&quot;apbqcd&quot;</span><br><span class=\"line\">解释：注意，word1 比 word2 长，&quot;cd&quot; 需要追加到合并后字符串的末尾。</span><br><span class=\"line\">word1：  a   b   c   d</span><br><span class=\"line\">word2：    p   q </span><br><span class=\"line\">合并后：  a p b q c   d</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= word1.length, word2.length &lt;= 100</li>\n<li>word1 和 word2 由小写英文字母组成</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">string <span class=\"title\">mergeAlternately</span><span class=\"params\">(string word1, string word2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;</span><br><span class=\"line\">        string ans=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i&lt;word1.<span class=\"built_in\">size</span>()||j&lt;word2.<span class=\"built_in\">size</span>())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&lt;word2.<span class=\"built_in\">size</span>())&#123;</span><br><span class=\"line\">                    ans+=word2[j];</span><br><span class=\"line\">                    j++;</span><br><span class=\"line\">                    flag=<span class=\"number\">1</span>-flag;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    ans+=word1[i];</span><br><span class=\"line\">                    i++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&lt;word1.<span class=\"built_in\">size</span>())&#123;</span><br><span class=\"line\">                    ans+=word1[i];</span><br><span class=\"line\">                    i++;</span><br><span class=\"line\">                    flag=<span class=\"number\">1</span>-flag;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    ans+=word2[j];</span><br><span class=\"line\">                    j++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (m+n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/19/LeetCode/1700-%E6%97%A0%E6%B3%95%E5%90%83%E5%8D%88%E9%A4%90%E7%9A%84%E5%AD%A6%E7%94%9F%E6%95%B0%E9%87%8F/",
            "url": "https://x-17.top/2022/10/19/LeetCode/1700-%E6%97%A0%E6%B3%95%E5%90%83%E5%8D%88%E9%A4%90%E7%9A%84%E5%AD%A6%E7%94%9F%E6%95%B0%E9%87%8F/",
            "title": "1700. 无法吃午餐的学生数量",
            "date_published": "2022-10-19T00:03:42.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1700-无法吃午餐的学生数量\"><a class=\"markdownIt-Anchor\" href=\"#1700-无法吃午餐的学生数量\">#</a> <a href=\"https://leetcode.cn/problems/number-of-students-unable-to-eat-lunch/\">1700. 无法吃午餐的学生数量</a></h1>\n<p>学校的自助午餐提供圆形和方形的三明治，分别用数字 0 和 1 表示。所有学生站在一个队列里，每个学生要么喜欢圆形的要么喜欢方形的。<br>\n餐厅里三明治的数量与学生的数量相同。所有三明治都放在一个 栈 里，每一轮：</p>\n<ul>\n<li>如果队列最前面的学生 喜欢 栈顶的三明治，那么会 拿走它 并离开队列。</li>\n<li>否则，这名学生会 放弃这个三明治 并回到队列的尾部。<br>\n这个过程会一直持续到队列里所有学生都不喜欢栈顶的三明治为止。</li>\n</ul>\n<p>给你两个整数数组 students 和 sandwiches ，其中 sandwiches [i] 是栈里面第 i​​​​​​ 个三明治的类型（i = 0 是栈的顶部）， students [j] 是初始队列里第 j​​​​​​ 名学生对三明治的喜好（j = 0 是队列的最开始位置）。请你返回无法吃午餐的学生数量。</p>\n<p></p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：students = [1,1,0,0], sandwiches = [0,1,0,1]</span><br><span class=\"line\">输出：0 </span><br><span class=\"line\">解释：</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [1,0,0,1]。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [0,0,1,1]。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [0,1,1]，三明治栈为 sandwiches = [1,0,1]。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [1,1,0]。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [1,0]，三明治栈为 sandwiches = [0,1]。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [0,1]。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [1]，三明治栈为 sandwiches = [1]。</span><br><span class=\"line\"><span class=\"bullet\">-</span> 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = []，三明治栈为 sandwiches = []。</span><br><span class=\"line\">所以所有学生都有三明治吃。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：students = [1,1,1,0,0,1], sandwiches = [1,0,0,0,1,1]</span><br><span class=\"line\">输出：3</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= students.length, sandwiches.length &lt;= 100</li>\n<li>students.length == sandwiches.length</li>\n<li>sandwiches [i] 要么是 0 ，要么是 1 。</li>\n<li>students [i] 要么是 0 ，要么是 1 。</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>根据题意模拟即可</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countStudents</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; students, vector&lt;<span class=\"type\">int</span>&gt;&amp; sandwiches)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> a[<span class=\"number\">2</span>]=&#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;students.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">            a[students[i]]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;sandwiches.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[sandwiches[i]])&#123;</span><br><span class=\"line\">                a[sandwiches[i]]--;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a[<span class=\"number\">0</span>]+a[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/11/LeetCode/1790-%E4%BB%85%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E6%8D%A2%E8%83%BD%E5%90%A6%E4%BD%BF%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89/",
            "url": "https://x-17.top/2022/10/11/LeetCode/1790-%E4%BB%85%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E6%8D%A2%E8%83%BD%E5%90%A6%E4%BD%BF%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89/",
            "title": "1790. 仅执行一次字符串交换能否使两个字符串相等",
            "date_published": "2022-10-11T00:22:18.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1790-仅执行一次字符串交换能否使两个字符串相等\"><a class=\"markdownIt-Anchor\" href=\"#1790-仅执行一次字符串交换能否使两个字符串相等\">#</a> <a href=\"https://leetcode.cn/problems/check-if-one-string-swap-can-make-strings-equal/\">1790. 仅执行一次字符串交换能否使两个字符串相等</a></h1>\n<p>给你长度相等的两个字符串  <code>s1</code>  和  <code>s2</code>  。一次 字符串交换 操作的步骤如下：选出某个字符串中的两个下标（不必不同），并交换这两个下标所对应的字符。</p>\n<p>如果对 其中一个字符串 执行 最多一次字符串交换 就可以使两个字符串相等，返回  <code>true</code>  ；否则，返回  <code>false</code>  。</p>\n<p>示例 1：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s1 = &quot;bank&quot;, s2 = &quot;kanb&quot;</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：例如，交换 s2 中的第一个和最后一个字符可以得到 &quot;bank&quot;</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s1 = &quot;attack&quot;, s2 = &quot;defend&quot;</span><br><span class=\"line\">输出：false</span><br><span class=\"line\">解释：一次字符串交换无法使两个字符串相等</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s1 = &quot;kelb&quot;, s2 = &quot;kelb&quot;</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：两个字符串已经相等，所以不需要进行字符串交换</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s1 = &quot;abcd&quot;, s2 = &quot;dcba&quot;</span><br><span class=\"line\">输出：false</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= s1.length, s2.length &lt;= 100</li>\n<li>s1.length == s2.length</li>\n<li>s1 和 s2 仅由小写英文字母组成</li>\n</ul>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>只需要按照题意模拟即可</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">areAlmostEqual</span><span class=\"params\">(string s1, string s2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> flag1,flag2;</span><br><span class=\"line\">        <span class=\"type\">int</span> t=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;s1.<span class=\"built_in\">length</span>();i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t==<span class=\"number\">1</span>&amp;&amp;s1[i]!=s2[i])&#123;</span><br><span class=\"line\">                flag1=s1[i];</span><br><span class=\"line\">                flag2=s2[i];</span><br><span class=\"line\">                t=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t==<span class=\"number\">0</span>&amp;&amp;s1[i]!=s2[i])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(flag1==s2[i]&amp;&amp;flag2==s1[i])&#123;</span><br><span class=\"line\">                    t=<span class=\"number\">-1</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t==<span class=\"number\">-1</span>&amp;&amp;s1[i]!=s2[i])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<ul>\n<li>时间复杂度：$O (n)$</li>\n<li>空间复杂度：$O (1)$</li>\n</ul>\n",
            "tags": [
                "每日一题",
                "Easy"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/07/LeetCode/1800-%E6%9C%80%E5%A4%A7%E5%8D%87%E5%BA%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/",
            "url": "https://x-17.top/2022/10/07/LeetCode/1800-%E6%9C%80%E5%A4%A7%E5%8D%87%E5%BA%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/",
            "title": "1800. 最大升序子数组和",
            "date_published": "2022-10-06T23:33:33.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"1800-最大升序子数组和\"><a class=\"markdownIt-Anchor\" href=\"#1800-最大升序子数组和\">#</a> <a href=\"https://leetcode.cn/problems/maximum-ascending-subarray-sum/\">1800. 最大升序子数组和</a></h1>\n<blockquote>\n<p>给你一个正整数组成的数组 nums ，返回 nums 中一个 升序 子数组的最大可能元素和。</p>\n<p>子数组是数组中的一个连续数字序列。</p>\n<p>已知子数组 [numsl, numsl+1, …, numsr-1, numsr] ，若对所有 i（l &lt;= i &lt; r），numsi &lt; numsi+1 都成立，则称这一子数组为 升序 子数组。注意，大小为 1 的子数组也视作 升序 子数组。</p>\n<p></p>\n<p>示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [10,20,30,5,10,50]</span><br><span class=\"line\">输出：65</span><br><span class=\"line\">解释：[5,10,50] 是元素和最大的升序子数组，最大元素和为 65 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [10,20,30,40,50]</span><br><span class=\"line\">输出：150</span><br><span class=\"line\">解释：[10,20,30,40,50] 是元素和最大的升序子数组，最大元素和为 150 。 </span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [12,17,15,13,10,11,12]</span><br><span class=\"line\">输出：33</span><br><span class=\"line\">解释：[10,11,12] 是元素和最大的升序子数组，最大元素和为 33 。</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [100,10,1]</span><br><span class=\"line\">输出：100</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>\n<p>1 &lt;= nums.length &lt;= 100</p>\n</li>\n<li>\n<p>1 &lt;= nums[i] &lt;= 100</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">maxAscendingSum</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> m=nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;nums.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i]&gt;nums[i<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                m+=nums[i];</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                ans=<span class=\"built_in\">max</span>(m,ans);</span><br><span class=\"line\">                m=nums[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans=<span class=\"built_in\">max</span>(ans,m);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/03/LeetCode/1784-%E6%A3%80%E6%9F%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E6%AE%B5/",
            "url": "https://x-17.top/2022/10/03/LeetCode/1784-%E6%A3%80%E6%9F%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E6%AE%B5/",
            "title": "1784. 检查二进制字符串字段",
            "date_published": "2022-10-02T23:41:35.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/check-if-binary-string-has-at-most-one-segment-of-ones/\">https://leetcode.cn/problems/check-if-binary-string-has-at-most-one-segment-of-ones/</a> 给你一个二进制字符串 s ，该字符串 不含前导零 。 如果 s 包含 零个或一个由连续的 ‘1’ 组成的字段 ，返回 true​​​ 。否则，返回 false 。 如果 s 中 由连续若干个 ‘1’ 组成的字段 数量不超过 1，返回 true​​​ 。否则，返回 false 。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;1001&quot;</span><br><span class=\"line\">输出：false</span><br><span class=\"line\">解释：由连续若干个 &#x27;1&#x27; 组成的字段数量为 2，返回 false</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;110&quot;</span><br><span class=\"line\">输出：true</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= s.length &lt;= 100</li>\n<li>s [i]​​​​ 为 ‘0’ 或 ‘1’</li>\n<li>s [0] 为 ‘1’</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    bool checkOnesSegment(string s) &#123;</span><br><span class=\"line\">        int flag=1;</span><br><span class=\"line\">        for(int i=0;i&lt;s.length();i++)&#123;</span><br><span class=\"line\">            if(!flag&amp;&amp;s[i]==&#x27;1&#x27;)&#123;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(s[i]==&#x27;1&#x27;&amp;&amp;flag)&#123;</span><br><span class=\"line\">                for(int j=i;j&lt;s.length();j++)&#123;</span><br><span class=\"line\">                    if(s[j]!=&#x27;1&#x27;)&#123;</span><br><span class=\"line\">                        i=j-1;</span><br><span class=\"line\">                        flag=0;</span><br><span class=\"line\">                        break;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (1)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/10/01/LeetCode/1694-%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81/",
            "url": "https://x-17.top/2022/10/01/LeetCode/1694-%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81/",
            "title": "1694. 重新格式化电话号码",
            "date_published": "2022-10-01T00:06:52.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/reformat-phone-number/\">https://leetcode.cn/problems/reformat-phone-number/</a> 给你一个字符串形式的电话号码 number 。number 由数字、空格 ’ '、和破折号 ‘-’ 组成。 请你按下述方式重新格式化电话号码。 首先，删除 所有的空格和破折号。 其次，将数组从左到右 每 3 个一组 分块，直到 剩下 4 个或更少数字。剩下的数字将按下述规定再分块： 2 个数字：单个含 2 个数字的块。 3 个数字：单个含 3 个数字的块。 4 个数字：两个分别含 2 个数字的块。 最后用破折号将这些块连接起来。注意，重新格式化过程中 不应该 生成仅含 1 个数字的块，并且 最多 生成两个含 2 个数字的块。 返回格式化后的电话号码。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：number = &quot;1-23-45 6&quot;</span><br><span class=\"line\">输出：&quot;123-456&quot;</span><br><span class=\"line\">解释：数字是 &quot;123456&quot;</span><br><span class=\"line\">步骤 1：共有超过 4 个数字，所以先取 3 个数字分为一组。第 1 个块是 &quot;123&quot; 。</span><br><span class=\"line\">步骤 2：剩下 3 个数字，将它们放入单个含 3 个数字的块。第 2 个块是 &quot;456&quot; 。</span><br><span class=\"line\">连接这些块后得到 &quot;123-456&quot; 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：number = &quot;123 4-567&quot;</span><br><span class=\"line\">输出：&quot;123-45-67&quot;</span><br><span class=\"line\">解释：数字是 &quot;1234567&quot;.</span><br><span class=\"line\">步骤 1：共有超过 4 个数字，所以先取 3 个数字分为一组。第 1 个块是 &quot;123&quot; 。</span><br><span class=\"line\">步骤 2：剩下 4 个数字，所以将它们分成两个含 2 个数字的块。这 2 块分别是 &quot;45&quot; 和 &quot;67&quot; 。</span><br><span class=\"line\">连接这些块后得到 &quot;123-45-67&quot; 。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：number = &quot;123 4-5678&quot;</span><br><span class=\"line\">输出：&quot;123-456-78&quot;</span><br><span class=\"line\">解释：数字是 &quot;12345678&quot; 。</span><br><span class=\"line\">步骤 1：第 1 个块 &quot;123&quot; 。</span><br><span class=\"line\">步骤 2：第 2 个块 &quot;456&quot; 。</span><br><span class=\"line\">步骤 3：剩下 2 个数字，将它们放入单个含 2 个数字的块。第 3 个块是 &quot;78&quot; 。</span><br><span class=\"line\">连接这些块后得到 &quot;123-456-78&quot; 。</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：number = &quot;12&quot;</span><br><span class=\"line\">输出：&quot;12&quot;</span><br></pre></td></tr></table></figure>\n<p>示例 5：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：number = &quot;--17-5 229 35-39475 &quot;</span><br><span class=\"line\">输出：&quot;175-229-353-94-75&quot;</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>2 &lt;= number.length &lt;= 100</li>\n<li>number 由数字和字符 ‘-’ 及 ’ ’ 组成。</li>\n<li>number 中至少含 2 个数字。</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    string reformatNumber(string number) &#123;</span><br><span class=\"line\">        deque&lt;char&gt; d;</span><br><span class=\"line\">        for(int i=0;i&lt;number.length();i++)&#123; </span><br><span class=\"line\">            if(number[i]!=&#x27; &#x27;&amp;&amp;number[i]!=&#x27;-&#x27;) </span><br><span class=\"line\">                d.push_back(number[i]); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        string ans=&quot;&quot;; </span><br><span class=\"line\">        while(d.size()&gt;4)&#123;</span><br><span class=\"line\">            for(int i=0;i&lt;3;i++)&#123;</span><br><span class=\"line\">                ans+=d.front();</span><br><span class=\"line\">                d.pop_front();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans+=&#x27;-&#x27;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(d.size()==4)&#123;</span><br><span class=\"line\">            for(int i=0;i&lt;2;i++)&#123;</span><br><span class=\"line\">                ans+=d.front();</span><br><span class=\"line\">                d.pop_front();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans+=&#x27;-&#x27;;</span><br><span class=\"line\">            for(int i=0;i&lt;2;i++)&#123;</span><br><span class=\"line\">                ans+=d.front();</span><br><span class=\"line\">                d.pop_front();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else if(d.size()==3)&#123;</span><br><span class=\"line\">            for(int i=0;i&lt;3;i++)&#123;</span><br><span class=\"line\">                ans+=d.front();</span><br><span class=\"line\">                d.pop_front();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            for(int i=0;i&lt;2;i++)&#123;</span><br><span class=\"line\">                ans+=d.front();</span><br><span class=\"line\">                d.pop_front();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/29/LeetCode/%E9%9D%A2%E8%AF%95%E9%A2%98-01-09-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AE%E8%BD%AC/",
            "url": "https://x-17.top/2022/09/29/LeetCode/%E9%9D%A2%E8%AF%95%E9%A2%98-01-09-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AE%E8%BD%AC/",
            "title": "面试题 01.09. 字符串轮转",
            "date_published": "2022-09-28T23:47:17.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/string-rotation-lcci/\">https://leetcode.cn/problems/string-rotation-lcci/</a> 字符串轮转。给定两个字符串 s1 和 s2，请编写代码检查 s2 是否为 s1 旋转而成（比如，waterbottle 是 erbottlewat 旋转后的字符串）。 示例 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s1 = &quot;waterbottle&quot;, s2 = &quot;erbottlewat&quot;</span><br><span class=\"line\">输出：True</span><br></pre></td></tr></table></figure>\n<p>示例 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s1 = &quot;aa&quot;, s2 = &quot;aba&quot;</span><br><span class=\"line\">输出：False</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>字符串长度在 [0, 100000] 范围内。</li>\n</ul>\n<p>说明:</p>\n<ul>\n<li>你能只调用一次检查子串的方法吗？</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    bool isFlipedString(string s1, string s2) &#123;</span><br><span class=\"line\">        return s1.size() == s2.size() &amp;&amp; (s1 + s1).find(s2) != string::npos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/27/LeetCode/%E9%9D%A2%E8%AF%95%E9%A2%98-01-02-%E5%88%A4%E5%AE%9A%E6%98%AF%E5%90%A6%E4%BA%92%E4%B8%BA%E5%AD%97%E7%AC%A6%E9%87%8D%E6%8E%92/",
            "url": "https://x-17.top/2022/09/27/LeetCode/%E9%9D%A2%E8%AF%95%E9%A2%98-01-02-%E5%88%A4%E5%AE%9A%E6%98%AF%E5%90%A6%E4%BA%92%E4%B8%BA%E5%AD%97%E7%AC%A6%E9%87%8D%E6%8E%92/",
            "title": "面试题 01.02. 判定是否互为字符重排",
            "date_published": "2022-09-27T00:37:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/check-permutation-lcci/\">https://leetcode.cn/problems/check-permutation-lcci/</a> 给定两个字符串 s1 和 s2，请编写一个程序，确定其中一个字符串的字符重新排列后，能否变成另一个字符串。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入: s1 = &quot;abc&quot;, s2 = &quot;bca&quot;</span><br><span class=\"line\">输出: true</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入: s1 = &quot;abc&quot;, s2 = &quot;bad&quot;</span><br><span class=\"line\">输出: false</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ul>\n<li>0 &lt;= len(s1) &lt;= 100</li>\n<li>0 &lt;= len(s2) &lt;= 100</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>排序，哈希都可以</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    bool CheckPermutation(string s1, string s2) &#123;</span><br><span class=\"line\">        sort(s1.begin(),s1.end());</span><br><span class=\"line\">        sort(s2.begin(),s2.end());</span><br><span class=\"line\">        if(s1==s2)</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        else</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (nlogn)\\)</li>\n<li>空间复杂度 \\(O (logn)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/24/LeetCode/1652-%E6%8B%86%E7%82%B8%E5%BC%B9/",
            "url": "https://x-17.top/2022/09/24/LeetCode/1652-%E6%8B%86%E7%82%B8%E5%BC%B9/",
            "title": "1652. 拆炸弹",
            "date_published": "2022-09-24T00:22:47.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/defuse-the-bomb/\">https://leetcode.cn/problems/defuse-the-bomb/</a> 你有一个炸弹需要拆除，时间紧迫！你的情报员会给你一个长度为 n 的 循环 数组 code 以及一个密钥 k 。 为了获得正确的密码，你需要替换掉每一个数字。所有数字会 同时 被替换。 如果 k &gt; 0 ，将第 i 个数字用 接下来 k 个数字之和替换。 如果 k &lt;0 ，将第 i 个数字用 之前 k 个数字之和替换。 如果 k == 0 ，将第 i 个数字用 0 替换。 由于 code 是循环的， code [n-1] 下一个元素是 code [0] ，且 code [0] 前一个元素是 code [n-1] 。 给你 循环 数组 code 和整数密钥 k ，请你返回解密后的结果来拆除炸弹！ 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：code = [5,7,1,4], k = 3</span><br><span class=\"line\">输出：[12,10,16,13]</span><br><span class=\"line\">解释：每个数字都被接下来 3 个数字之和替换。解密后的密码为 [7+1+4, 1+4+5, 4+5+7, 5+7+1]。注意到数组是循环连接的。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：code = [1,2,3,4], k = 0</span><br><span class=\"line\">输出：[0,0,0,0]</span><br><span class=\"line\">解释：当 k 为 0 时，所有数字都被 0 替换。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：code = [2,4,9,3], k = -2</span><br><span class=\"line\">输出：[12,5,6,13]</span><br><span class=\"line\">解释：解密后的密码为 [3+9, 2+3, 4+2, 9+4] 。注意到数组是循环连接的。如果 k 是负数，那么和为 之前 的数字。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>n == code.length</li>\n<li>1 &lt;= n &lt;= 100</li>\n<li>1 &lt;= code[i] &lt;= 100</li>\n<li>-(n - 1) &lt;= k &lt;= n - 1</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    vector&lt;int&gt; decrypt(vector&lt;int&gt;&amp; code, int k) &#123;</span><br><span class=\"line\">        vector&lt;int&gt; ans;</span><br><span class=\"line\">        if (k &gt; 0) &#123;</span><br><span class=\"line\">            for(int i = 0; i &lt; code.size(); i++) &#123;</span><br><span class=\"line\">                int num=0;</span><br><span class=\"line\">                for(int j = 1; j &lt;= k; j++) &#123;</span><br><span class=\"line\">                    num += code[(i+j)%code.size()];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                ans.push_back(num);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else if (k &lt; 0) &#123;</span><br><span class=\"line\">            k = -k;</span><br><span class=\"line\">            for(int i = 0; i &lt; code.size(); i++) &#123;</span><br><span class=\"line\">                int num=0;</span><br><span class=\"line\">                for(int j = 1; j &lt;= k; j++) &#123;</span><br><span class=\"line\">                    num += code[(i-j+code.size())%code.size()];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                ans.push_back(num);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else &#123;</span><br><span class=\"line\">            for(int i = 0; i &lt; code.size(); i++) &#123;</span><br><span class=\"line\">                ans.push_back(0);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/22/LeetCode/1640-%E8%83%BD%E5%90%A6%E8%BF%9E%E6%8E%A5%E5%BD%A2%E6%88%90%E6%95%B0%E7%BB%84/",
            "url": "https://x-17.top/2022/09/22/LeetCode/1640-%E8%83%BD%E5%90%A6%E8%BF%9E%E6%8E%A5%E5%BD%A2%E6%88%90%E6%95%B0%E7%BB%84/",
            "title": "1640. 能否连接形成数组",
            "date_published": "2022-09-21T23:48:07.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/check-array-formation-through-concatenation/\">https://leetcode.cn/problems/check-array-formation-through-concatenation/</a> 给你一个整数数组 arr ，数组中的每个整数 互不相同 。另有一个由整数数组构成的数组 pieces，其中的整数也 互不相同 。请你以 任意顺序 连接 pieces 中的数组以形成 arr 。但是，不允许 对每个数组 pieces [i] 中的整数重新排序。 如果可以连接 pieces 中的数组形成 arr ，返回 true ；否则，返回 false 。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：arr = [15,88], pieces = [[88],[15]]</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：依次连接 [15] 和 [88]</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：arr = [49,18,16], pieces = [[16,18,49]]</span><br><span class=\"line\">输出：false</span><br><span class=\"line\">解释：即便数字相符，也不能重新排列 pieces[0]</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：arr = [91,4,64,78], pieces = [[78],[4,64],[91]]</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：依次连接 [91]、[4,64] 和 [78]</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= pieces.length &lt;= arr.length &lt;= 100</li>\n<li>sum(pieces[i].length) == arr.length</li>\n<li>1 &lt;= pieces[i].length &lt;= arr.length</li>\n<li>1 &lt;= arr[i], pieces[i][j] &lt;= 100</li>\n<li>arr 中的整数 互不相同</li>\n<li>pieces 中的整数 互不相同（也就是说，如果将 pieces 扁平化成一维数组，数组中的所有整数互不相同）</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    bool canFormArray(vector&lt;int&gt;&amp; arr, vector&lt;vector&lt;int&gt;&gt;&amp; pieces) &#123;</span><br><span class=\"line\">        map&lt;int,int&gt; m;</span><br><span class=\"line\">        for(int i=0;i&lt;arr.size();i++)&#123;</span><br><span class=\"line\">            m[arr[i]]=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        map&lt;int,int&gt; n;</span><br><span class=\"line\">        for(int i=0;i&lt;pieces.size();i++)&#123;</span><br><span class=\"line\">            if(m.count(pieces[i][0])==0)&#123;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(int j=1;j&lt;pieces[i].size();j++)&#123;</span><br><span class=\"line\">                if(m.count(pieces[i][0])==0)&#123;</span><br><span class=\"line\">                    return false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(m[pieces[i][j]]!=m[pieces[i][j-1]]+1)&#123;</span><br><span class=\"line\">                    return false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/19/LeetCode/1636-%E6%8C%89%E7%85%A7%E9%A2%91%E7%8E%87%E5%B0%86%E6%95%B0%E7%BB%84%E5%8D%87%E5%BA%8F%E6%8E%92%E5%BA%8F/",
            "url": "https://x-17.top/2022/09/19/LeetCode/1636-%E6%8C%89%E7%85%A7%E9%A2%91%E7%8E%87%E5%B0%86%E6%95%B0%E7%BB%84%E5%8D%87%E5%BA%8F%E6%8E%92%E5%BA%8F/",
            "title": "1636. 按照频率将数组升序排序",
            "date_published": "2022-09-19T00:15:06.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/sort-array-by-increasing-frequency/\">https://leetcode.cn/problems/sort-array-by-increasing-frequency/</a> 给你一个整数数组 nums ，请你将数组按照每个值的频率 升序 排序。如果有多个值的频率相同，请你按照数值本身将它们 降序 排序。 请你返回排序后的数组。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,1,2,2,2,3]</span><br><span class=\"line\">输出：[3,1,1,2,2,2]</span><br><span class=\"line\">解释：&#x27;3&#x27; 频率为 1，&#x27;1&#x27; 频率为 2，&#x27;2&#x27; 频率为 3 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [2,3,1,3,2]</span><br><span class=\"line\">输出：[1,3,3,2,2]</span><br><span class=\"line\">解释：&#x27;2&#x27; 和 &#x27;3&#x27; 频率都为 2 ，所以它们之间按照数值本身降序排序。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [-1,1,-6,4,5,-6,1,4,1]</span><br><span class=\"line\">输出：[5,-1,4,4,-6,-6,1,1,1]</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= nums.length &lt;= 100</li>\n<li>-100 &lt;= nums[i] &lt;= 100</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    vector&lt;int&gt; frequencySort(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class=\"line\">        unordered_map&lt;int, int&gt; cnt;</span><br><span class=\"line\">        for (int num : nums) &#123;</span><br><span class=\"line\">            cnt[num]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sort(nums.begin(), nums.end(), [&amp;](const int a, const int b) &#123;</span><br><span class=\"line\">            if (cnt[a] != cnt[b]) &#123;</span><br><span class=\"line\">                return cnt[a] &lt; cnt[b]; </span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">            return a &gt; b;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        return nums;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (nlogn)\\)</li>\n<li>空间复杂度 \\(O (n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/17/LeetCode/1624-%E4%B8%A4%E4%B8%AA%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "url": "https://x-17.top/2022/09/17/LeetCode/1624-%E4%B8%A4%E4%B8%AA%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "title": "1624. 两个相同字符之间的最长子字符串",
            "date_published": "2022-09-17T06:06:02.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/largest-substring-between-two-equal-characters/\">https://leetcode.cn/problems/largest-substring-between-two-equal-characters/</a> 给你一个字符串 s，请你返回 两个相同字符之间的最长子字符串的长度 ，计算长度时不含这两个字符。如果不存在这样的子字符串，返回 -1 。 子字符串 是字符串中的一个连续字符序列。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;aa&quot;</span><br><span class=\"line\">输出：0</span><br><span class=\"line\">解释：最优的子字符串是两个 &#x27;a&#x27; 之间的空子字符串。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;abca&quot;</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：最优的子字符串是 &quot;bc&quot; 。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;cbzxy&quot;</span><br><span class=\"line\">输出：-1</span><br><span class=\"line\">解释：s 中不存在出现出现两次的字符，所以返回 -1 。</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;cabbac&quot;</span><br><span class=\"line\">输出：4</span><br><span class=\"line\">解释：最优的子字符串是 &quot;abba&quot; ，其他的非最优解包括 &quot;bb&quot; 和 &quot;&quot; 。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= s.length &lt;= 300</li>\n<li>s 只含小写英文字母</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    int maxLengthBetweenEqualCharacters(string s) &#123;</span><br><span class=\"line\">        map&lt;char,vector&lt;int&gt;&gt; m;</span><br><span class=\"line\">        for(int i=0;i&lt;s.length();i++)&#123;</span><br><span class=\"line\">            m[s[i]].push_back(i); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        int ans=-1; </span><br><span class=\"line\">        for(auto it=m.begin();it!=m.end();it++)&#123; </span><br><span class=\"line\">            if(it-&gt;second.size()&gt;=2)&#123;</span><br><span class=\"line\">                ans=max(ans,it-&gt;second[it-&gt;second.size()-1]-it-&gt;second[0]-1);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/14/LeetCode/1619-%E5%88%A0%E9%99%A4%E6%9F%90%E4%BA%9B%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E5%9D%87%E5%80%BC/",
            "url": "https://x-17.top/2022/09/14/LeetCode/1619-%E5%88%A0%E9%99%A4%E6%9F%90%E4%BA%9B%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E5%9D%87%E5%80%BC/",
            "title": "1619. 删除某些元素后的数组均值",
            "date_published": "2022-09-14T05:55:59.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/mean-of-array-after-removing-some-elements/\">https://leetcode.cn/problems/mean-of-array-after-removing-some-elements/</a> 给你一个整数数组 arr ，请你删除最小 5% 的数字和最大 5% 的数字后，剩余数字的平均值。 与 标准答案 误差在 10-5 的结果都被视为正确结果。 示例 1： 输入：arr = [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3] 输出：2.00000 解释：删除数组中最大和最小的元素后，所有元素都等于 2，所以平均值为 2 。 示例 2： 输入：arr = [6,2,7,5,1,2,0,3,10,2,5,0,5,5,0,8,7,6,8,0] 输出：4.00000 示例 3： 输入：arr = [6,0,7,0,7,5,7,8,3,4,0,7,8,1,6,8,1,1,2,4,8,1,9,5,4,3,8,5,10,8,6,6,1,0,6,10,8,2,3,4] 输出：4.77778 示例 4： 输入：arr = [9,7,8,7,7,8,4,4,6,8,8,7,6,8,8,9,2,6,0,0,1,10,8,6,3,3,5,1,10,9,0,7,10,0,10,4,1,10,6,9,3,6,0,0,2,7,0,6,7,2,9,7,7,3,0,1,6,1,10,3] 输出：5.27778 示例 5： 输入：arr = [4,8,4,10,0,7,1,3,7,8,8,3,4,1,6,2,1,1,8,0,9,8,0,3,9,10,3,10,1,10,7,3,2,1,4,9,10,7,6,4,0,8,5,1,2,1,6,2,5,0,7,10,9,10,3,7,10,5,8,5,7,6,7,6,10,9,5,10,5,5,7,2,10,7,7,8,2,0,1,1] 输出：5.29167 提示：</p>\n<ul>\n<li>20 &lt;= arr.length &lt;= 1000</li>\n<li>arr.length 是 20 的 倍数</li>\n<li>\\(0 &lt;= arr[i] &lt;= 10^5\\)</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    double trimMean(vector&lt;int&gt;&amp; arr) &#123;</span><br><span class=\"line\">        sort(arr.begin(),arr.end());</span><br><span class=\"line\">        double ans=0;</span><br><span class=\"line\">        int n=arr.size();</span><br><span class=\"line\">        for(int i=n/20;i&lt;n-n/20;i++)&#123;</span><br><span class=\"line\">            ans+=arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans/(n-n/10);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (nlogn)\\)</li>\n<li>空间复杂度 \\(O (logn)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/12/LeetCode/1608-%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC/",
            "url": "https://x-17.top/2022/09/12/LeetCode/1608-%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC/",
            "title": "1608. 特殊数组的特征值",
            "date_published": "2022-09-12T06:55:57.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/special-array-with-x-elements-greater-than-or-equal-x/\">https://leetcode.cn/problems/special-array-with-x-elements-greater-than-or-equal-x/</a> 给你一个非负整数数组 nums 。如果存在一个数 x ，使得 nums 中恰好有 x 个元素 大于或者等于 x ，那么就称 nums 是一个 特殊数组 ，而 x 是该数组的 特征值 。 注意： x 不必 是 nums 的中的元素。 如果数组 nums 是一个 特殊数组 ，请返回它的特征值 x 。否则，返回 -1 。可以证明的是，如果 nums 是特殊数组，那么其特征值 x 是 唯一的 。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [3,5]</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：有 2 个元素（3 和 5）大于或等于 2 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [0,0]</span><br><span class=\"line\">输出：-1</span><br><span class=\"line\">解释：没有满足题目要求的特殊数组，故而也不存在特征值 x 。</span><br><span class=\"line\">如果 x = 0，应该有 0 个元素 &gt;= x，但实际有 2 个。</span><br><span class=\"line\">如果 x = 1，应该有 1 个元素 &gt;= x，但实际有 0 个。</span><br><span class=\"line\">如果 x = 2，应该有 2 个元素 &gt;= x，但实际有 0 个。</span><br><span class=\"line\">x 不能取更大的值，因为 nums 中只有两个元素。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [0,4,3,0,4]</span><br><span class=\"line\">输出：3</span><br><span class=\"line\">解释：有 3 个元素大于或等于 3 。</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [3,6,7,7,0]</span><br><span class=\"line\">输出：-1</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= nums.length &lt;= 100</li>\n<li>0 &lt;= nums[i] &lt;= 1000</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>降序排列找到第 i 位元素大于等于 i 且第 i+1 位小于 i,i 即为所求。(前面所述的 i 从 1 开始，代码中从 0 开始所以 i+1 为所求）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    static bool compare(int a,int b)&#123;</span><br><span class=\"line\">        return a&gt;b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int specialArray(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class=\"line\">        sort(nums.begin(),nums.end(),compare);</span><br><span class=\"line\">        for(int i=0;i&lt;nums.size();i++)&#123; </span><br><span class=\"line\">            if(nums[i]&gt;i)&#123;</span><br><span class=\"line\">                if(i+1==nums.size())&#123;</span><br><span class=\"line\">                    return nums.size();</span><br><span class=\"line\">                &#125;else if(nums[i+1]&lt;=i)&#123;</span><br><span class=\"line\">                    return i+1;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (nlogn)\\)</li>\n<li>空间复杂度 \\(O (logn)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/09/LeetCode/1598-%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C%E6%97%A5%E5%BF%97%E6%90%9C%E9%9B%86%E5%99%A8/",
            "url": "https://x-17.top/2022/09/09/LeetCode/1598-%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C%E6%97%A5%E5%BF%97%E6%90%9C%E9%9B%86%E5%99%A8/",
            "title": "1598. 文件夹操作日志搜集器",
            "date_published": "2022-09-09T01:19:19.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/crawler-log-folder/\">https://leetcode.cn/problems/crawler-log-folder/</a> 每当用户执行变更文件夹操作时，LeetCode 文件系统都会保存一条日志记录。 下面给出对变更操作的说明： “…/” ：移动到当前文件夹的父文件夹。如果已经在主文件夹下，则 继续停留在当前文件夹 。 “./” ：继续停留在当前文件夹。 “x/” ：移动到名为 x 的子文件夹中。题目数据 保证总是存在文件夹 x 。 给你一个字符串列表 logs ，其中 logs [i] 是用户在 ith 步执行的操作。 文件系统启动时位于主文件夹，然后执行 logs 中的操作。 执行完所有变更文件夹操作后，请你找出 返回主文件夹所需的最小步数 。 示例 1： <img src=\"https://x-17.top/wp-content/uploads/2022/09/sample_11_1957-300x58.png\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：logs = [&quot;d1/&quot;,&quot;d2/&quot;,&quot;../&quot;,&quot;d21/&quot;,&quot;./&quot;]</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：执行 &quot;../&quot; 操作变更文件夹 2 次，即可回到主文件夹</span><br></pre></td></tr></table></figure>\n<p>示例 2： <img src=\"https://x-17.top/wp-content/uploads/2022/09/sample_22_1957-300x128.png\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：logs = [&quot;d1/&quot;,&quot;d2/&quot;,&quot;./&quot;,&quot;d3/&quot;,&quot;../&quot;,&quot;d31/&quot;]</span><br><span class=\"line\">输出：3</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：logs = [&quot;d1/&quot;,&quot;../&quot;,&quot;../&quot;,&quot;../&quot;]</span><br><span class=\"line\">输出：0</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= logs.length &lt;= 103</li>\n<li>2 &lt;= logs[i].length &lt;= 10</li>\n<li>logs [i] 包含小写英文字母，数字，’.’ 和 ‘/’</li>\n<li>logs [i] 符合语句中描述的格式</li>\n<li>文件夹名称由小写英文字母和数字组成</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>遍历比较字符串是否为 &quot;…/“和”./&quot;，不是则记录值加一，是 &quot;…/&quot; 且记录值不为 0 则记录值减一。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    int minOperations(vector&lt;string&gt;&amp; logs) &#123;</span><br><span class=\"line\">        string s1=&quot;./&quot;,s2=&quot;../&quot;;</span><br><span class=\"line\">        int ans=0;</span><br><span class=\"line\">        for(int i=0;i&lt;logs.size();i++)&#123;</span><br><span class=\"line\">            if(logs[i]==s2)&#123;</span><br><span class=\"line\">                if(ans) ans--;</span><br><span class=\"line\">            &#125;else if(logs[i]!=s1)&#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (1)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/07/LeetCode/1592-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8D%95%E8%AF%8D%E9%97%B4%E7%9A%84%E7%A9%BA%E6%A0%BC/",
            "url": "https://x-17.top/2022/09/07/LeetCode/1592-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8D%95%E8%AF%8D%E9%97%B4%E7%9A%84%E7%A9%BA%E6%A0%BC/",
            "title": "1592. 重新排列单词间的空格",
            "date_published": "2022-09-07T09:04:47.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/rearrange-spaces-between-words/\">https://leetcode.cn/problems/rearrange-spaces-between-words/</a> 给你一个字符串 text ，该字符串由若干被空格包围的单词组成。每个单词由一个或者多个小写英文字母组成，并且两个单词之间至少存在一个空格。题目测试用例保证 text 至少包含一个单词 。 请你重新排列空格，使每对相邻单词之间的空格数目都 相等 ，并尽可能 最大化 该数目。如果不能重新平均分配所有空格，请 将多余的空格放置在字符串末尾 ，这也意味着返回的字符串应当与原 text 字符串的长度相等。 返回 重新排列空格后的字符串 。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：text = &quot; this is a sentence &quot;</span><br><span class=\"line\">输出：&quot;this is a sentence&quot;</span><br><span class=\"line\">解释：总共有 9 个空格和 4 个单词。可以将 9 个空格平均分配到相邻单词之间，相邻单词间空格数为：9 / (4-1) = 3 个。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：text = &quot; practice makes perfect&quot;</span><br><span class=\"line\">输出：&quot;practice makes perfect &quot;</span><br><span class=\"line\">解释：总共有 7 个空格和 3 个单词。7 / (3-1) = 3 个空格加上 1 个多余的空格。多余的空格需要放在字符串的末尾。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：text = &quot;hello world&quot;</span><br><span class=\"line\">输出：&quot;hello world&quot;</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：text = &quot; walks udp package into bar a&quot;</span><br><span class=\"line\">输出：&quot;walks udp package into bar a &quot;</span><br></pre></td></tr></table></figure>\n<p>示例 5：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：text = &quot;a&quot;</span><br><span class=\"line\">输出：&quot;a&quot;</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= text.length &lt;= 100</li>\n<li>text 由小写英文字母和 ’ ’ 组成</li>\n<li>text 中至少包含一个单词</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>模拟</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    string reorderSpaces(string text) &#123;</span><br><span class=\"line\">        list&lt;char&gt; a;</span><br><span class=\"line\">        vector&lt;string&gt; b;</span><br><span class=\"line\">        int ans=0;</span><br><span class=\"line\">        for(int i=0;i&lt;text.length();i++)&#123;</span><br><span class=\"line\">            if(text[i]==&#x27; &#x27;)&#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">                string s;</span><br><span class=\"line\">                while(!a.empty())&#123;</span><br><span class=\"line\">                    s+=a.front();</span><br><span class=\"line\">                    a.pop_front();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(!s.empty())&#123;</span><br><span class=\"line\">                    b.push_back(s);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">                a.push_back(text[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        string s1;</span><br><span class=\"line\">        while(!a.empty())&#123;</span><br><span class=\"line\">            s1+=a.front();</span><br><span class=\"line\">            a.pop_front();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(!s1.empty())&#123;</span><br><span class=\"line\">            b.push_back(s1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        int n=b.size()-1;</span><br><span class=\"line\">        string s=&quot;&quot;;</span><br><span class=\"line\">        s+=b[0];</span><br><span class=\"line\">        if(n==0)&#123;</span><br><span class=\"line\">            for(int i=0;i&lt;ans;i++)&#123;</span><br><span class=\"line\">                s+=&#x27; &#x27;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            for(int i=1;i&lt;b.size();i++)&#123;</span><br><span class=\"line\">                for(int j=0;j&lt;ans/n;j++)&#123;</span><br><span class=\"line\">                    s+=&#x27; &#x27;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                s+=b[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(int i=0;i&lt;ans%n;i++)&#123;</span><br><span class=\"line\">                s+=&#x27; &#x27;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n)\\)</li>\n<li>空间复杂度 \\(O (n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/04/LeetCode/1582-%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E4%BD%8D%E7%BD%AE/",
            "url": "https://x-17.top/2022/09/04/LeetCode/1582-%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E4%BD%8D%E7%BD%AE/",
            "title": "1582. 二进制矩阵中的特殊位置",
            "date_published": "2022-09-04T04:19:09.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/special-positions-in-a-binary-matrix/\">https://leetcode.cn/problems/special-positions-in-a-binary-matrix/</a> 给你一个大小为 rows x cols 的矩阵 mat，其中 mat [i][j] 是 0 或 1，请返回 矩阵 mat 中特殊位置的数目 。 特殊位置 定义：如果 mat [i][j] == 1 并且第 i 行和第 j 列中的所有其他元素均为 0（行和列的下标均 从 0 开始 ），则位置 (i, j) 被称为特殊位置。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：mat = [[1,0,0],</span><br><span class=\"line\">  [0,0,1],</span><br><span class=\"line\">  [1,0,0]]</span><br><span class=\"line\">输出：1</span><br><span class=\"line\">解释：(1,2) 是一个特殊位置，因为 mat[1][2] == 1 且所处的行和列上所有其他元素都是 0</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：mat = [[1,0,0],</span><br><span class=\"line\">  [0,1,0],</span><br><span class=\"line\">  [0,0,1]]</span><br><span class=\"line\">输出：3</span><br><span class=\"line\">解释：(0,0), (1,1) 和 (2,2) 都是特殊位置</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：mat = [[0,0,0,1],</span><br><span class=\"line\">  [1,0,0,0],</span><br><span class=\"line\">  [0,1,1,0],</span><br><span class=\"line\">  [0,0,0,0]]</span><br><span class=\"line\">输出：2</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：mat = [[0,0,0,0,0],</span><br><span class=\"line\">  [1,0,0,0,0],</span><br><span class=\"line\">  [0,1,0,0,0],</span><br><span class=\"line\">  [0,0,1,0,0],</span><br><span class=\"line\">  [0,0,0,1,1]]</span><br><span class=\"line\">输出：3</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>rows == mat.length</li>\n<li>cols == mat[i].length</li>\n<li>1 &lt;= rows, cols &lt;= 100</li>\n<li>mat [i][j] 是 0 或 1</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>模拟即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    int numSpecial(vector&lt;vector&lt;int&gt;&gt;&amp; mat) &#123;</span><br><span class=\"line\">        vector&lt;int&gt; h;</span><br><span class=\"line\">        vector&lt;int&gt; s;</span><br><span class=\"line\">        for(int i=0;i&lt;mat.size();i++)&#123;</span><br><span class=\"line\">            int num=0;</span><br><span class=\"line\">            for(int j=0;j&lt;mat[i].size();j++)&#123;</span><br><span class=\"line\">                num+=mat[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            h.push_back(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(int i=0;i&lt;mat[0].size();i++)&#123;</span><br><span class=\"line\">            int num=0;</span><br><span class=\"line\">            for(int j=0;j&lt;mat.size();j++)&#123;</span><br><span class=\"line\">                num+=mat[j][i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            s.push_back(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int ans=0;</span><br><span class=\"line\">        for(int i=0;i&lt;h.size();i++)&#123;</span><br><span class=\"line\">            for(int j=0;j&lt;s.size();j++)&#123;</span><br><span class=\"line\">                if(h[i]==1&amp;&amp;s[j]==1&amp;&amp;mat[i][j]==1)&#123;</span><br><span class=\"line\">                    ans++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (m*n)\\)</li>\n<li>空间复杂度 \\(O (m+n)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/01/LeetCode/1475-%E5%95%86%E5%93%81%E6%8A%98%E6%89%A3%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E4%BB%B7%E6%A0%BC/",
            "url": "https://x-17.top/2022/09/01/LeetCode/1475-%E5%95%86%E5%93%81%E6%8A%98%E6%89%A3%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E4%BB%B7%E6%A0%BC/",
            "title": "1475. 商品折扣后的最终价格",
            "date_published": "2022-09-01T09:05:37.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/final-prices-with-a-special-discount-in-a-shop/\">https://leetcode.cn/problems/final-prices-with-a-special-discount-in-a-shop/</a> 给你一个数组 prices ，其中 prices [i] 是商店里第 i 件商品的价格。 商店里正在进行促销活动，如果你要买第 i 件商品，那么你可以得到与 prices [j] 相等的折扣，其中 j 是满足 j &gt; i 且 prices [j] &lt;= prices [i] 的 最小下标 ，如果没有满足条件的 j ，你将没有任何折扣。 请你返回一个数组，数组中第 i 个元素是折扣后你购买商品 i 最终需要支付的价格。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：prices = [8,4,6,2,3]</span><br><span class=\"line\">输出：[4,2,4,2,3]</span><br><span class=\"line\">解释：</span><br><span class=\"line\">商品 0 的价格为 price[0]=8 ，你将得到 prices[1]=4 的折扣，所以最终价格为 8 - 4 = 4 。</span><br><span class=\"line\">商品 1 的价格为 price[1]=4 ，你将得到 prices[3]=2 的折扣，所以最终价格为 4 - 2 = 2 。</span><br><span class=\"line\">商品 2 的价格为 price[2]=6 ，你将得到 prices[3]=2 的折扣，所以最终价格为 6 - 2 = 4 。</span><br><span class=\"line\">商品 3 和 4 都没有折扣。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：prices = [1,2,3,4,5]</span><br><span class=\"line\">输出：[1,2,3,4,5]</span><br><span class=\"line\">解释：在这个例子中，所有商品都没有折扣。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：prices = [10,1,1,6]</span><br><span class=\"line\">输出：[9,0,1,6]</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= prices.length &lt;= 500</li>\n<li>1 &lt;= prices[i] &lt;= 10^3</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>按题意直接遍历即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    vector finalPrices(vector&lt;int&gt;&amp; prices) &#123;</span><br><span class=\"line\">        vector a;</span><br><span class=\"line\">        for(int i=0;i&lt;prices.size()-1;i++)&#123;</span><br><span class=\"line\">            int flag=1;</span><br><span class=\"line\">            for(int j=i+1;j&lt;prices.size();j++)&#123; </span><br><span class=\"line\">                if(prices[i]&gt;=prices[j])&#123;</span><br><span class=\"line\">                    a.push_back(prices[i]-prices[j]);</span><br><span class=\"line\">                    flag=0;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(flag)&#123;</span><br><span class=\"line\">                a.push_back(prices[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a.push_back(prices[prices.size()-1]);</span><br><span class=\"line\">        return a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度 \\(O (n^2)\\)</li>\n<li>空间复杂度 \\(O (1)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/08/29/LeetCode/1470-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/",
            "url": "https://x-17.top/2022/08/29/LeetCode/1470-%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/",
            "title": "1470. 重新排列数组",
            "date_published": "2022-08-29T03:55:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/shuffle-the-array/\">https://leetcode.cn/problems/shuffle-the-array/</a> 给你一个数组 nums ，数组中有 2n 个元素，按 [x1,x2,…,xn,y1,y2,…,yn] 的格式排列。 请你将数组按 [x1,y1,x2,y2,…,xn,yn] 格式重新排列，返回重排后的数组。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [2,5,1,3,4,7], n = 3</span><br><span class=\"line\">输出：[2,3,5,4,1,7]</span><br><span class=\"line\">解释：由于 x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 ，所以答案为 [2,3,5,4,1,7]</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,2,3,4,4,3,2,1], n = 4</span><br><span class=\"line\">输出：[1,4,2,3,3,2,4,1]</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,1,2,2], n = 2</span><br><span class=\"line\">输出：[1,2,1,2]</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>\\(1 &lt;= n &lt;= 500\\)</li>\n<li>\\(nums.length == 2n\\)</li>\n<li>\\(1 &lt;= nums[i] &lt;= 10^3\\)</li>\n</ul>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>按题意模拟即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    vector shuffle(vector&lt;int&gt;&amp; nums, int n) &#123;</span><br><span class=\"line\">        vector ans;</span><br><span class=\"line\">        for(int i=0;i&lt;n;i++)&#123;</span><br><span class=\"line\">            ans.push_back(nums[i]);</span><br><span class=\"line\">            ans.push_back(nums[i+n]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度：\\(O (n)\\)</li>\n<li>空间复杂度：\\(O (1)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/08/26/LeetCode/1464-%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/",
            "url": "https://x-17.top/2022/08/26/LeetCode/1464-%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/",
            "title": "1464. 数组中两元素的最大乘积",
            "date_published": "2022-08-26T04:23:17.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/maximum-product-of-two-elements-in-an-array/\">https://leetcode.cn/problems/maximum-product-of-two-elements-in-an-array/</a> 给你一个整数数组 nums，请你选择数组的两个不同下标 i 和 j，使 (nums [i]-1)*(nums [j]-1) 取得最大值。 请你计算并返回该式的最大值。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [3,4,5,2]</span><br><span class=\"line\">输出：12 </span><br><span class=\"line\">解释：如果选择下标 i=1 和 j=2（下标从 0 开始），则可以获得最大值，(nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12 。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,5,4,5]</span><br><span class=\"line\">输出：16</span><br><span class=\"line\">解释：选择下标 i=1 和 j=3（下标从 0 开始），则可以获得最大值 (5-1)*(5-1) = 16 。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：nums = [3,7]</span><br><span class=\"line\">输出：12</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2 &lt;= nums.length &lt;= 500</span><br><span class=\"line\">1 &lt;= nums[i] &lt;= 10^3</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>解法一：数据最多是 500，而暴力求解时间复杂度是 \\(O (n^2)\\), 显然可以通过。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    int maxProduct(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class=\"line\">        int ans=0;</span><br><span class=\"line\">        for(int i=0;i&lt;nums.size()-1;i++)&#123;</span><br><span class=\"line\">            for(int j=i+1;j&lt;nums.size();j++)&#123;</span><br><span class=\"line\">                ans=max(ans,(nums[i]-1)*(nums[j]-1));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度：\\(O (n^2)\\)</li>\n<li>空间复杂度：\\(O (1)\\)</li>\n</ul>\n<p>解法二：根据题意我们只需要找出最大值和次大值即可，所以可以排序实现。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    int maxProduct(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class=\"line\">        sort(nums.begin(),nums.end());</span><br><span class=\"line\">        return (nums[nums.size()-1]-1)*(nums[nums.size()-2]-1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度：\\(O (nlogn)\\)</li>\n<li>空间复杂度：\\(O (1)\\)</li>\n</ul>\n<p>解法三：一次遍历维护最大值和次大值即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    int maxProduct(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class=\"line\">        int a=max(nums[0],nums[1]),b=min(nums[0],nums[1]);</span><br><span class=\"line\">        for(int i=2;i&lt;nums.size();i++)&#123;</span><br><span class=\"line\">            int c=a;</span><br><span class=\"line\">            a=max(a,nums[i]);</span><br><span class=\"line\">            if(a==nums[i])&#123;</span><br><span class=\"line\">                b=max(c,b);</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                b=max(b,nums[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return (a-1)*(b-1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析：</p>\n<ul>\n<li>时间复杂度：\\(O (n)\\)</li>\n<li>空间复杂度：\\(O (1)\\)</li>\n</ul>\n",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        },
        {
            "id": "https://x-17.top/2022/08/24/LeetCode/1460-%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89/",
            "url": "https://x-17.top/2022/08/24/LeetCode/1460-%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89/",
            "title": "1460. 通过翻转子数组使两个数组相等",
            "date_published": "2022-08-24T04:12:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p><a href=\"https://leetcode.cn/problems/make-two-arrays-equal-by-reversing-sub-arrays/\">https://leetcode.cn/problems/make-two-arrays-equal-by-reversing-sub-arrays/</a> 给你两个长度相同的整数数组 target 和 arr 。每一步中，你可以选择 arr 的任意 非空子数组 并将它翻转。你可以执行此过程任意次。 如果你能让 arr 变得与 target 相同，返回 True；否则，返回 False 。 示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：target = [1,2,3,4], arr = [2,4,1,3]</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：你可以按照如下步骤使 arr 变成 target：</span><br><span class=\"line\">1- 翻转子数组 [2,4,1] ，arr 变成 [1,4,2,3]</span><br><span class=\"line\">2- 翻转子数组 [4,2] ，arr 变成 [1,2,4,3]</span><br><span class=\"line\">3- 翻转子数组 [4,3] ，arr 变成 [1,2,3,4]</span><br><span class=\"line\">上述方法并不是唯一的，还存在多种将 arr 变成 target 的方法。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：target = [7], arr = [7]</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：arr 不需要做任何翻转已经与 target 相等。</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：target = [3,7,9], arr = [3,7,11]</span><br><span class=\"line\">输出：false</span><br><span class=\"line\">解释：arr 没有数字 9 ，所以无论如何也无法变成 target 。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">target.length == arr.length</span><br><span class=\"line\">1 &lt;= target.length &lt;= 1000</span><br><span class=\"line\">1 &lt;= target[i] &lt;= 1000</span><br><span class=\"line\">1 &lt;= arr[i] &lt;= 1000</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<p>如果 target 和 arr 的长度为 1，那么只需要判断二者是否相等即可； 如果它们的长度大于一，以二为例，只要它们的元素都相等，就可以通过最多一次交换得到相同的两个数组；同理可证，可在不改变其他数字位置的情况下交换任意两个数字的位置，因此，只需判断两数组所包含的元素是否完全相等即可。 解法一：利用 map 存储出现的整数及次数，比较是否相等即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    bool canBeEqual(vector&lt;int&gt;&amp; target, vector&lt;int&gt;&amp; arr) &#123;</span><br><span class=\"line\">        if(target.size()==1)&#123;</span><br><span class=\"line\">            if(target[0]==arr[0])</span><br><span class=\"line\">                return true;</span><br><span class=\"line\">            else</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            map&lt;int,int&gt; t;</span><br><span class=\"line\">            map&lt;int,int&gt; a;</span><br><span class=\"line\">            for(int i=0;i&lt;target.size();i++)&#123; </span><br><span class=\"line\">                if(t.count(target[i]))&#123; </span><br><span class=\"line\">                    t[target[i]]++; </span><br><span class=\"line\">                &#125;else&#123; </span><br><span class=\"line\">                    t[target[i]]=1; </span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">                if(a.count(arr[i]))&#123; </span><br><span class=\"line\">                    a[arr[i]]++; </span><br><span class=\"line\">                &#125;else&#123; </span><br><span class=\"line\">                    a[arr[i]]=1; </span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(auto it=t.begin(),ia=a.begin();it!=t.end(),ia!=a.end();it++,ia++)&#123; </span><br><span class=\"line\">                if(it-&gt;first!=ia-&gt;firstit-&gt;second!=ia-&gt;second)&#123;</span><br><span class=\"line\">                    return false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>解法二：排序后比较即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    bool canBeEqual(vector&lt;int&gt;&amp; target, vector&lt;int&gt;&amp; arr) &#123;</span><br><span class=\"line\">        sort(target.begin(),target.end());</span><br><span class=\"line\">        sort(arr.begin(),arr.end());</span><br><span class=\"line\">        for(int i=0;i&lt;target.size();i++)&#123;</span><br><span class=\"line\">            if(target[i]!=arr[i])&#123;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "Easy",
                "leetcode每日一题"
            ]
        }
    ]
}