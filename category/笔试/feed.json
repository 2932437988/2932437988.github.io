{
    "version": "https://jsonfeed.org/version/1",
    "title": "潇十七 • All posts by \"笔试\" category",
    "description": "可生活不是电影，我也少了点运气",
    "home_page_url": "https://x-17.top",
    "items": [
        {
            "id": "https://x-17.top/2022/09/30/%E6%B1%82%E8%81%8C/%E5%8D%8E%E5%8B%A4%E9%9B%86%E5%9B%A2/",
            "url": "https://x-17.top/2022/09/30/%E6%B1%82%E8%81%8C/%E5%8D%8E%E5%8B%A4%E9%9B%86%E5%9B%A2/",
            "title": "华勤集团",
            "date_published": "2022-09-30T07:15:15.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/30 测评设置可复用之前答过的记录，好评！！！ 笔试三十道，三十分钟，选择加判断</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/29/%E6%B1%82%E8%81%8C/%E5%B0%8F%E5%A4%A9%E6%89%8D%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/29/%E6%B1%82%E8%81%8C/%E5%B0%8F%E5%A4%A9%E6%89%8D%E7%AC%94%E8%AF%95/",
            "title": "小天才笔试",
            "date_published": "2022-09-29T00:43:32.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/29 8:00~20:00 一小时随到随答 20 道单选 5 道多选</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/27/%E6%B1%82%E8%81%8C/%E7%99%BE%E5%BA%A6%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/27/%E6%B1%82%E8%81%8C/%E7%99%BE%E5%BA%A6%E7%AC%94%E8%AF%95/",
            "title": "百度笔试",
            "date_published": "2022-09-27T12:45:56.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/27 19:00~21:00 单选 15 道 不定项选择 5 道 3 道编程题 一、给定一个长度为 n 的数组，请把这个数组分成 k 组，每个元素在某一组中出现且在一组中仅出现一次，求分好的 k 组数平均值之和的最小值 0.1 二、给定 n 个桃，每个桃由酸度 ai 和甜度 bi，仅可交换其中一个桃的酸甜度，求所有桃的甜度乘积最大值 AC 三、给定一个数组，第 i 为表示树的第 i 个节点的颜色，颜色仅有红蓝两种，给定树的边，边权值定义为删除该边后的两个子树中同色联通块数量之差的绝对值，求该树的边权值之和</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/27/%E6%B1%82%E8%81%8C/%E5%89%91%E5%BF%83%E4%BA%92%E5%A8%B1%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/27/%E6%B1%82%E8%81%8C/%E5%89%91%E5%BF%83%E4%BA%92%E5%A8%B1%E7%AC%94%E8%AF%95/",
            "title": "剑心互娱笔试",
            "date_published": "2022-09-27T00:30:57.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/27 00:00~2022/9/28 23:55 两小时随到随答 四道编程题 一、赛车游戏，给定 uint_8 数组，0 代表空位，1 代表障碍，初始可从第一行任意空白位置，可以任意向左右空白移动，若任意移动后下一行都不为 0，则游戏失败，返回可到达最大行数。 二、水池蓄水，给定水池容量 m，进出水口会在给定时间切换状态，进水口每分钟进水 m1，每 t1 分钟切换状态，出水口每分钟出水 m2，每 t2 分钟切换状态，若同时打开则为 m1-m2，初始水池为空，水池最多容纳 m，初始进出水口均为打开，求 t 分钟后水池中的水有多少。AC 三、给定三角形三个顶点坐标，求坐标系中和三角形有相交的格数（1*1） 四、有 1-9 种积木及四种收纳盒 1 号收纳盒：4 个 1 号格子，1 个 2 号格子，1 个 3 号格子 价值 10 元 2 号收纳盒：1 个 6 号格子，1 个 2 号格子，1 个 1 号格子 价值 9 元 3 号收纳盒：1 个 4 号格子，1 个 5 号格子 价值 8 元 4 号收纳盒：1 个 9 号格子 价值 7 元 给定积木数量 n，及积木种类，每个积木只能放入编号不小于它的格子中，每个格子只能放一块积木，求收集全部积木所需最小花费。</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/26/%E6%B1%82%E8%81%8C/%E5%90%8C%E8%8A%B1%E9%A1%BA%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/26/%E6%B1%82%E8%81%8C/%E5%90%8C%E8%8A%B1%E9%A1%BA%E7%AC%94%E8%AF%95/",
            "title": "同花顺笔试",
            "date_published": "2022-09-26T06:25:39.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/26 10:00~19:00 三十道题目 简答 代码阅读 编程 选择 共三十道 好多好累。。。</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/24/%E6%B1%82%E8%81%8C/%E6%81%92%E7%94%9F%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/24/%E6%B1%82%E8%81%8C/%E6%81%92%E7%94%9F%E7%AC%94%E8%AF%95/",
            "title": "恒生笔试",
            "date_published": "2022-09-24T12:33:15.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>首先，这个在线程序编辑器奇奇怪怪的，吐槽一波。 时间：2022/9/24 18:00~22:00 两小时随来随考 题目： 基础知识不定项选择 10 道 语言知识不定项选择 5 道 数据库 sql5 道 编程题两道 一、给出三种转账渠道 三档金额对应的手续费 及 到账所需时间，根据给定的金额及最晚到账时间选择最优的渠道方案 二、给定一个正整数，求其是否是质数，若不为质数，请返回构成这个数的指数因子   ps：没有输入输出样例，题目对于输入描述不清晰，对输出格式说明也不明了。</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/23/%E6%B1%82%E8%81%8C/%E4%BC%B4%E9%B1%BC%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/23/%E6%B1%82%E8%81%8C/%E4%BC%B4%E9%B1%BC%E7%AC%94%E8%AF%95/",
            "title": "伴鱼笔试",
            "date_published": "2022-09-23T10:22:11.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/23 16:00 四道编程题 一、简单题。给定十以内的正整数 n，m；求从一到 n 选任意个 数字 ，使这些数字和为 m；按字典序输出所有组合 二、简单题。输入两个有序序列，输出一个有序序列 三、中等题。求矩阵从左上到右下最小路径和 四、困难题。给定长度小于 100000 的字符串 A,B，求出将 B 插入 A 后所得字符串为回文的方案数</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/18/%E6%B1%82%E8%81%8C/%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/18/%E6%B1%82%E8%81%8C/%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AF%95/",
            "title": "网易游戏开发笔试",
            "date_published": "2022-09-18T12:09:24.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/18 19:00~22:00 四道编程题 一、识别车牌准确度，两个字符串，颜色正确 2 分，区域正确 3 分，五位车牌号最长连续相同字段长度为得分，满分十分。 二、给定每个资源加载依赖项，请求某资源须加载其依赖项，已加载的不会重复加载，使用完毕关闭无依赖项资源，求最多已加载资源数量 三、给出多个矩阵对角坐标，求出拼合图形全部顶点坐标 四、6*6 地图探索，探索过的地图标位 close 不可再次访问，只可向上下左右向量位置移动，初始位置自定义，最多十张地图，一张地图全部 close 可进入下一张，地图中存在怪与金币，人物与怪均存在血量与攻击力，相遇同时攻击，怪物死亡可获得金币并置为 close，人物死亡可花费指定金币复活，血量为初始血量一半，金币点可以获得金币，通关地图可以获得金币，死亡或者全部通关视为人物结束，求任务结束可持有的最多金币数。</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/15/%E6%B1%82%E8%81%8C/%E8%9A%82%E8%9A%81/",
            "url": "https://x-17.top/2022/09/15/%E6%B1%82%E8%81%8C/%E8%9A%82%E8%9A%81/",
            "title": "蚂蚁",
            "date_published": "2022-09-15T12:17:21.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/15 19:00~20:30 题目：六道单选题 六道不定项选择题 三道编程题 一、忘了，ac 了。 二、树的节点初始权值为 1，每次可使一颗子树全部节点权值加一，根节点编号为 1，求使所有节点权值等于编号的最少操作次数 三、求字符串中有多少子串符合有且仅有一个字符为奇数个，其余均为偶数个。</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/14/%E6%B1%82%E8%81%8C/%E5%B0%8F%E7%B1%B3/",
            "url": "https://x-17.top/2022/09/14/%E6%B1%82%E8%81%8C/%E5%B0%8F%E7%B1%B3/",
            "title": "小米",
            "date_published": "2022-09-14T11:44:10.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/14 18:30~20:00 题目：11 道单选 9 道多选 2 道编程 一、翻转链表 left 位到 right 位 二、二叉搜索树转中序遍历双向链表</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/04/%E6%B1%82%E8%81%8C/%E6%BB%B4%E6%BB%B4%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/04/%E6%B1%82%E8%81%8C/%E6%BB%B4%E6%BB%B4%E7%AC%94%E8%AF%95/",
            "title": "滴滴笔试",
            "date_published": "2022-09-04T12:47:58.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/4 19:00~20:40 20 道选择题 两道编程题 第一题：n 个桃子，常数 k，第 i 个重量为 \\(a_i\\)，使一箱中最重的桃子重量不超过平均重量的 k 倍，求一箱中最多几个桃子。 通过 55%</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt; </span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    int n, k;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class=\"line\">    vector a;</span><br><span class=\"line\">    vector b;</span><br><span class=\"line\">    for (int i = 0;i &lt; n;i++) &#123; </span><br><span class=\"line\">        int t; cin &gt;&gt; t;</span><br><span class=\"line\">        a.push_back(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(a.begin(), a.end());</span><br><span class=\"line\">    b.push_back(a[0]);</span><br><span class=\"line\">    for (int i = 1;i &lt; n;i++) &#123;</span><br><span class=\"line\">        b.push_back(b[i - 1]+a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int ans = 0;</span><br><span class=\"line\">    </span><br><span class=\"line\">    for(int i=0;i&lt;n;i++)&#123;</span><br><span class=\"line\">        int num=0;</span><br><span class=\"line\">        for(int j=i+ans;j&lt;n;j++)&#123; </span><br><span class=\"line\">            if ((b[j] - b[i] + a[i]) * k &gt;= a[j] * (j - i + 1)) &#123;</span><br><span class=\"line\">                num=j-i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans=max(ans,num);</span><br><span class=\"line\">        if(i+ans&gt;n)&#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans+1 &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第二题：T 次询问，T 个 L，T 个 R，T 个 t，求从 \\(L_i-R_i\\) 有几个数的十进制各位异或值为 \\(t_i\\) AC</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">vector a;</span><br><span class=\"line\">vector b;</span><br><span class=\"line\">vector c;</span><br><span class=\"line\">bool YN(int x,int flag)&#123;</span><br><span class=\"line\">    while(x)&#123;</span><br><span class=\"line\">        flag=(flag^(x%10));</span><br><span class=\"line\">        x/=10;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if(flag)</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    cin&gt;&gt;n;</span><br><span class=\"line\">    for(int i=0;i&lt;n;i++)&#123; </span><br><span class=\"line\">        int t; cin&gt;&gt;t;</span><br><span class=\"line\">        a.push_back(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(int i=0;i&lt;n;i++)&#123; </span><br><span class=\"line\">        int t; cin&gt;&gt;t;</span><br><span class=\"line\">        b.push_back(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(int i=0;i&lt;n;i++)&#123; </span><br><span class=\"line\">        int t; cin&gt;&gt;t;</span><br><span class=\"line\">        c.push_back(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(int i=0;i&lt;n;i++)&#123; </span><br><span class=\"line\">        int ans=0; </span><br><span class=\"line\">        if(c[i]&gt;15)&#123;</span><br><span class=\"line\">            cout&lt;&lt;&quot;0 &quot;;</span><br><span class=\"line\">            continue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(int j=a[i];j&lt;=b[i];j++)&#123;</span><br><span class=\"line\">            if(YN(j,c[i]))</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout&lt;&lt;ans&lt;&lt;&quot; &quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout&lt;&lt;endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/04/%E6%B1%82%E8%81%8C/%E5%B0%8F%E7%BA%A2%E4%B9%A6%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/04/%E6%B1%82%E8%81%8C/%E5%B0%8F%E7%BA%A2%E4%B9%A6%E7%AC%94%E8%AF%95/",
            "title": "小红书笔试",
            "date_published": "2022-09-04T10:38:42.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/1 16:00~18:00 20 道选择题 三道编程题 第一题：输入一个数字序列，及镜像复制次数，求第 k 位的数。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include&lt;iostreaam&gt;</span><br><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    int n, m;</span><br><span class=\"line\">    long long k;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class=\"line\">    vector a(2 * n, 0);</span><br><span class=\"line\">    for (int i = 0;i &lt; n;i++) &#123; int t; cin &gt;&gt; t;</span><br><span class=\"line\">        a[i] = t;</span><br><span class=\"line\">        a[2 * n - 1 - i] = t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    k %= (2 * n);</span><br><span class=\"line\">    cout &lt;&lt; a[k - 1] &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第二题：输入一个数字序列，每次可对一个值加一或减一，求使序列乘积为 7 的最小操作次数。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    vector a;</span><br><span class=\"line\">    long long ans = 0;</span><br><span class=\"line\">    int num = 0;</span><br><span class=\"line\">    for (int i = 0;i &lt; n;i++) &#123; int t; cin &gt;&gt; t;</span><br><span class=\"line\">        if (t &lt; 0) &#123;</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a.push_back(abs(t));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int flag = 1;</span><br><span class=\"line\">    sort(a.begin(), a.end());</span><br><span class=\"line\">    if (a[0] == 0) &#123;</span><br><span class=\"line\">        ans += 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else &#123;</span><br><span class=\"line\">        if (num % 2 == 1)</span><br><span class=\"line\">            ans += 2 + abs(a[0] - 1);</span><br><span class=\"line\">        else</span><br><span class=\"line\">            ans += abs(a[0] - 1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (int i = 1;i &lt; a.size() - 1;i++) &#123;</span><br><span class=\"line\">        ans += abs(a[i] - 1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans += abs(a[a.size() - 1] - 7);</span><br><span class=\"line\">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第三题：n 个城市，m 条路，每天可走 k 单位长度，每条路都是单位长度 m 个数表示路的一个端点 m 个数表示路的另一个端点 m 个数表示过路费用 开通 X 的通行证可以免费通过过路费用不超过 X 的路，求一天内从 1 到 n 所需的最小 X。</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/01/%E6%B1%82%E8%81%8C/%E6%B7%B1%E4%BF%A1%E6%9C%8D%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/01/%E6%B1%82%E8%81%8C/%E6%B7%B1%E4%BF%A1%E6%9C%8D%E7%AC%94%E8%AF%95/",
            "title": "深信服笔试",
            "date_published": "2022-09-01T13:04:52.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/9/1 19:00~21:00 选择题 10 道，不定项 填空题 10 道 编程题三道 一、输入一个长度为 n 的数组及 k，循环比较数组的前两个元素，将较大的一个放在数组首位，将较小的一个放在数组末位，求连续胜利 k 次的数字。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;list&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    list arr;</span><br><span class=\"line\">    int k;</span><br><span class=\"line\">    int n = 0;</span><br><span class=\"line\">    int m = 0;</span><br><span class=\"line\">    int flag;</span><br><span class=\"line\">    while (cin &gt;&gt; k) &#123;</span><br><span class=\"line\">        arr.push_back(k);</span><br><span class=\"line\">        n++;</span><br><span class=\"line\">        flag = m;</span><br><span class=\"line\">        m = max(m, k);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    arr.pop_back();</span><br><span class=\"line\">    if (k &lt; n - 1) &#123;</span><br><span class=\"line\">        int flag = 0;</span><br><span class=\"line\">        int ans = 0;</span><br><span class=\"line\">        ans = arr.front();</span><br><span class=\"line\">        arr.pop_front();</span><br><span class=\"line\">        while (flag &lt; k) &#123; </span><br><span class=\"line\">            if (ans &gt; arr.front()) &#123;</span><br><span class=\"line\">                flag++;</span><br><span class=\"line\">                arr.push_back(arr.front());</span><br><span class=\"line\">                arr.pop_front();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else &#123;</span><br><span class=\"line\">                flag = 1;</span><br><span class=\"line\">                arr.push_back(ans);</span><br><span class=\"line\">                ans = arr.front();</span><br><span class=\"line\">                arr.pop_front();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else &#123;</span><br><span class=\"line\">        cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>二、输入长度为 n 的数组，求最大排序连续上升子段长度（输出 1 过 60%）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    cout &lt;&lt; 1 &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>三、输入 n 和 k，输入长度为 n 的数组，求按顺序侵入需要变换的最少次数（侵入要求为所取的值与当前元素值绝对值小于等于 k，初始值可为任意值且不计入次数）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    int n, x;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class=\"line\">    long long t;</span><br><span class=\"line\">    vector arr;</span><br><span class=\"line\">    for (int i = 0;i &lt; n;i++) &#123; </span><br><span class=\"line\">        cin &gt;&gt; t;</span><br><span class=\"line\">        arr.push_back(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    long long m1 = 10000000000, m2 = 0;</span><br><span class=\"line\">    int ans = 0;</span><br><span class=\"line\">    for (int i = 0;i &lt; arr.size();i++) &#123; </span><br><span class=\"line\">        long long m3 = min(m1, arr[i]); </span><br><span class=\"line\">        long long m4 = max(m2, arr[i]); </span><br><span class=\"line\">        if (m4 - m3 &gt; 2 * x) &#123;</span><br><span class=\"line\">            ans++;</span><br><span class=\"line\">            if (m3 != m1) &#123;</span><br><span class=\"line\">                m1 = m3;</span><br><span class=\"line\">                m2 = m3;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if (m4 != m2) &#123;</span><br><span class=\"line\">                m2 = m4;</span><br><span class=\"line\">                m1 = m4;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            m1 = m3;</span><br><span class=\"line\">            m2 = m4;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/09/01/%E6%B1%82%E8%81%8C/cvte%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/09/01/%E6%B1%82%E8%81%8C/cvte%E7%AC%94%E8%AF%95/",
            "title": "CVTE笔试",
            "date_published": "2022-09-01T09:13:11.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>时间：2022/8/31 19:00~20:30 不可修改之前做过的题目，白板编程 单多选混杂 20 道 编程题两道 第一题：降序排列输入数据并返回前百分之三十中最小的数。 第二题：输入 IPV4 地址（大于两个），返回子网最大掩码长度（1 的个数最多），使 IP 处于同一子网中。</p>\n",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/08/27/%E6%B1%82%E8%81%8C/360%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/08/27/%E6%B1%82%E8%81%8C/360%E7%AC%94%E8%AF%95/",
            "title": "360笔试",
            "date_published": "2022-08-27T07:10:47.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>2022 年 8 月 27 日 14:00~15:00</p>\n<blockquote>\n<p>选择题 40 道，一道 1.5 分，单多选混杂但有标明。 编程题两道。</p>\n</blockquote>\n<h2 id=\"第一题\"><a class=\"markdownIt-Anchor\" href=\"#第一题\">#</a> 第一题</h2>\n<p><strong>时间限制： 1000MS</strong> <strong>内存限制： 65536KB</strong> <strong>题目描述：</strong> <strong>在一张透明的纸上，用笔写下一个字符串。然后将纸翻面，请你判断正面和背面看到的字符串是否一样。 请注意，字符串在正反面看上去一样，必须要求每个字符是左右对称的，比如’W’字符是左右对称的，而’N’不是。</strong> <strong>输入描述</strong> <strong>输入包含多组数据，每组数据一行，包含一个全由大写字母构成的字符串 S。</strong> <strong>输出描述</strong> <strong>如果正面和背面看到的字符串一样。输出 YES，否则输出 NO</strong></p>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#include</span><br><span class=\"line\">#include</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">map&lt;char, int&gt; m;</span><br><span class=\"line\">m[&#x27;A&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;H&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;I&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;M&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;O&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;T&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;U&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;V&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;W&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;X&#x27;] = 1;</span><br><span class=\"line\">m[&#x27;Y&#x27;] = 1;</span><br><span class=\"line\">while (1) &#123;</span><br><span class=\"line\">string s;</span><br><span class=\"line\">if (cin &gt;&gt; s) &#123;</span><br><span class=\"line\">int flag = 0;</span><br><span class=\"line\">for (int i = 0;i &lt; s.length();i++) &#123;</span><br><span class=\"line\">if (!m.count(s[i])) &#123;</span><br><span class=\"line\">flag = 1;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (s[i] != s[s.length() - 1 - i]) &#123;</span><br><span class=\"line\">flag = 1;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (flag == 1)</span><br><span class=\"line\">cout &lt;&lt; &quot;NO&quot; &lt;&lt; endl;</span><br><span class=\"line\">else</span><br><span class=\"line\">cout &lt;&lt; &quot;YES&quot; &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else &#123;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第二题\"><a class=\"markdownIt-Anchor\" href=\"#第二题\">#</a> 第二题</h2>\n<p><strong>时间限制： 1000MS</strong> <strong>内存限制： 65536KB</strong> <strong>题目描述：</strong> <strong>最近一款吃鸡类型的游戏火爆全球。在组队模式下，你可以邀请自己的好友组建自己的小队，并选择是否填充（是否同意和非好友游玩），然后加入游戏。现在有 A 个单人队伍，B 个双人队伍，C 个三人队伍，D 个四人队伍，并且全都同意填充，但已有的多人队伍的队员不能被拆开填充到其他队伍，请问最多能组成多少个四人队伍。</strong> <strong>输入描述</strong> <strong>第一行一个正整数 T，表示数据组数。（1≤T≤100）</strong> <strong>接下来 T 行，每行四个非负整数，A，B，C，D。（0≤A, B, C, D≤150）</strong> <strong>输出描述</strong> <strong>共 T 行，每行输出一个队伍数。</strong></p>\n<h2 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#include</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">int n;</span><br><span class=\"line\">cin &gt;&gt; n;</span><br><span class=\"line\">for (int i = 0;i &lt; n;i++) &#123;</span><br><span class=\"line\">int A, B, C, D;</span><br><span class=\"line\">cin &gt;&gt; A &gt;&gt; B &gt;&gt; C &gt;&gt; D;</span><br><span class=\"line\">int ans = 0;</span><br><span class=\"line\">ans += D;</span><br><span class=\"line\">if (A &gt;= C) &#123;</span><br><span class=\"line\">ans += C;</span><br><span class=\"line\">A -= C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else &#123;</span><br><span class=\"line\">ans += A;</span><br><span class=\"line\">A = 0;</span><br><span class=\"line\">C -= A;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ans += B / 2;</span><br><span class=\"line\">if (B % 2 == 1 &amp;&amp; A &gt;= 2) &#123;</span><br><span class=\"line\">ans += 1;</span><br><span class=\"line\">A -= 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ans += A / 4;</span><br><span class=\"line\">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔试"
            ]
        },
        {
            "id": "https://x-17.top/2022/08/25/%E6%B1%82%E8%81%8C/%E5%A5%87%E5%AE%89%E4%BF%A1%E7%AC%94%E8%AF%95/",
            "url": "https://x-17.top/2022/08/25/%E6%B1%82%E8%81%8C/%E5%A5%87%E5%AE%89%E4%BF%A1%E7%AC%94%E8%AF%95/",
            "title": "奇安信笔试",
            "date_published": "2022-08-25T12:38:58.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>2022 年 08 月 25 日 19:00~21:00 单选题 20 道，不定项选择题 10 道，编程题 2 道 编程题： 一、找出有向无环图从顶点到终点的道路数。 二、根据给定的面积公式求出 n 个点中最大面积，要求时间复杂度和空间复杂度。</p>\n",
            "tags": [
                "笔试"
            ]
        }
    ]
}